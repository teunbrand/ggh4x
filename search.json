[{"path":"https://teunbrand.github.io/ggh4x/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (https://www.contributor-covenant.org), version 1.0.0, available https://contributor-covenant.org/version/1/0/0/.","code":""},{"path":"https://teunbrand.github.io/ggh4x/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Teun van den Brand Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://teunbrand.github.io/ggh4x/articles/Facets.html","id":"extended-facets","dir":"Articles","previous_headings":"","what":"Extended facets","title":"Facets","text":"package offers two extensions vanilla facet_wrap() facet_grid() give control placement axes inner facets.","code":""},{"path":"https://teunbrand.github.io/ggh4x/articles/Facets.html","id":"wrap","dir":"Articles","previous_headings":"Extended facets","what":"Wrap","title":"Facets","text":"default behaviour facet_wrap2() replicate exactly ggplot2::facet_wrap() .  difference even scales = \"fixed\" (default), can draw axes () inner facets axes argument. Moreover, can choose omit axis labels keep axis ticks inner facets setting remove_labels argument.  Another nicety can force exact number rows columns.","code":"# Make a standard plot p <- ggplot(mpg, aes(displ, hwy, colour = as.factor(cyl))) + geom_point() +   labs(x = \"Engine displacement\", y = \"Highway miles per gallon\") +   guides(colour = \"none\")  p + facet_wrap2(vars(class)) p + facet_wrap2(vars(class), axes = \"all\", remove_labels = \"x\") p + facet_wrap2(vars(class), nrow = 4, ncol = 4, trim_blank = FALSE)"},{"path":"https://teunbrand.github.io/ggh4x/articles/Facets.html","id":"grid","dir":"Articles","previous_headings":"Extended facets","what":"Grid","title":"Facets","text":"Likewise, facet_grid2() based ggplot2::facet_grid() default behaves identically, also supports extended options axes facet_wrap2() .  addition, facet_grid2() also supports package calls ‘independent’ scales. relieves constraint ggplot2::facet_grid() scale can free rows columns layout, instead allows scales free within rows columns layout. keeps grid layout preserves flexibility scales wrapped facets. Notice plot , x-axes independent panel.  One sacrifice made independent scales, facet_grid2() independent scales space = \"free\" independent dimensions. can however combine different dimensions.","code":"p + facet_grid2(vars(year), vars(drv), axes = \"all\", remove_labels = \"y\") p + facet_grid2(vars(year), vars(drv), scales = \"free_x\", independent = \"x\") p + facet_grid2(vars(year), vars(drv),                  scales = \"free\", independent = \"y\", space = \"free_x\")"},{"path":"https://teunbrand.github.io/ggh4x/articles/Facets.html","id":"nested_facets","dir":"Articles","previous_headings":"","what":"Nested facets","title":"Facets","text":"Perhaps package might best known generating nested facets; wherein outer strips can span inner strips belong category. can especially useful hierarchical relations facets. example , ’ll categorise Iris species long short leaves.","code":"new_iris <- transform(   iris,    Nester = ifelse(Species == \"setosa\", \"Short Leaves\", \"Long Leaves\") )  iris_plot <- ggplot(new_iris, aes(Sepal.Width, Sepal.Length)) +   geom_point()  iris_plot +   facet_nested(~ Nester + Species)"},{"path":"https://teunbrand.github.io/ggh4x/articles/Facets.html","id":"nesting-lines","dir":"Articles","previous_headings":"Nested facets","what":"Nesting lines","title":"Facets","text":"prefer strips blank backgrounds, still indicate hierarchical nature setting nest_line = elment_line(). appearance line inherited theme element ggh4x.facet.nestline. example , nesting line dotted given element linetype = 2, also blue inherits theme element.","code":"iris_plot +   facet_nested(~ Nester + Species, nest_line = element_line(linetype = 2)) +   theme(strip.background = element_blank(),         ggh4x.facet.nestline = element_line(colour = \"blue\"))"},{"path":"https://teunbrand.github.io/ggh4x/articles/Facets.html","id":"relation-to-facet_grid","dir":"Articles","previous_headings":"Nested facets","what":"Relation to facet_grid()","title":"Facets","text":"facet_nested() based facet_grid()), differences. First, facet_nested() inherits facet_grid2(), inherits axis features. notably, facet_nested() doesn’t require input data facet variables. example , remove Species column, prevent facetting variable. Note didn’t specify new Nester variable, put second set points panels, just like facet_grid(). Furthermore, strips placed bottom, rearranges strips inner strips closest panels spanning strips furthest panel.","code":"iris_plot +   geom_point(data = ~ transform(.x, Species = NULL, Nester = \"All\")) +   facet_nested(~ Nester + Species, switch = \"x\")"},{"path":"https://teunbrand.github.io/ggh4x/articles/Facets.html","id":"variant-for-facet_wrap","dir":"Articles","previous_headings":"Nested facets","what":"Variant for facet_wrap()","title":"Facets","text":"similar variant exists wrapping facets. can span strips every strip.position argument, nifty tricks duplicating axes just axis ticks.  Please note facet_nested_wrap() change underlying layout strategy ggplot2::facet_wrap(). split sets separate rows columns. need type custom layout, read facet_manual() can !","code":"p +    facet_nested_wrap(     vars(cyl, drv), dir = \"v\", strip.position = \"left\",     axes = \"all\", remove_labels = \"x\"   ) +   theme(strip.placement = \"outside\")"},{"path":"https://teunbrand.github.io/ggh4x/articles/Facets.html","id":"manual-facets","dir":"Articles","previous_headings":"","what":"Manual facets","title":"Facets","text":"discussing manual facets, let first explain motivation behind .","code":""},{"path":"https://teunbrand.github.io/ggh4x/articles/Facets.html","id":"the-base-r-layout-function","dir":"Articles","previous_headings":"Manual facets","what":"The base-R layout() function","title":"Facets","text":"‘grid’ ‘wrap’ layouts facets great dynamically adapt based available data. However, layouts come limitation every panel occupies cell grid, lose control data drawn. base R graphics equivalent set-multi-panel figures layout() function. neat property function single plot can occupy one cell grid.","code":"# Setting up a design for a layout design <- matrix(c(1,2,3,2), 2, 2) layout(design) par(mar = c(2,2,1,1))  # Making a multi-panel plot based on the layout df <- mpg df$colours <- with(df, match(cyl, sort(unique(cyl)))) df$colours <- scales::hue_pal()(4)[df$colours] splitted <- split(df, df$drv) xlim <- range(df$displ) ylim <- range(df$cty) for (i in seq_along(splitted)) {   with(splitted[[i]], plot(displ, cty, col = colours, pch = 19,                            xlim = xlim, ylim = ylim, )) }"},{"path":"https://teunbrand.github.io/ggh4x/articles/Facets.html","id":"the-design-argument","dir":"Articles","previous_headings":"Manual facets","what":"The design argument","title":"Facets","text":"achieve similar level control ggplot2 facets, facet_manual() brought life. Like layout() function, facet_manual() requires pre-specified design panels go . ’ve called ‘manual’ facets, doesn’t dynamically generate layout based available data, like grid wrap facets . matrix given layout() function plots , can now used design argument manual facets.  alternative way specifying design using character string. approach inspired design argument patchwork::plot_layout() function lets set columns using subsequent characters, set rows using new lines. Empty cells can indicated #-sign.","code":"# Use design from previous chunk p + facet_manual(vars(factor(drv)), design = design) design <- \"   A##   AB#   #BC   ##C \" p + facet_manual(vars(drv), design = design)"},{"path":"https://teunbrand.github.io/ggh4x/articles/Facets.html","id":"placement-rules","dir":"Articles","previous_headings":"Manual facets","what":"Placement rules","title":"Facets","text":"facet_manual() function heights widths arguments can used set sizes rows columns design. example , ’re using integers heights argument specify relative sizes grid::units widths argument set absolute sizes. arguments apply cells panels drawn. Therefore, eventual size multi-cell panel likely exact sum cell sizes, facet_manual() makes room plot decorations like strips axes. example , height 4 wheel drive (4) panel exactly 3 + 2 = 5 relative units, due room made fit x-axis front-wheel drive (f) panel strip rear-wheel drive (r) panel.  panels share axes ranges, drawn staggered fashion displayed. limited constraints axes can placed, hard decide duplicated axes OK omit. manual facets ‘smart’ enough figure exactly just draw axes every panel, regardless whether fixed free. exception rule, panel occupies exactly 1 cell horizontal vertical direction. , remove_labels axes arguments trickier use facet_manual(), may applied criterion met.","code":"p + facet_manual(   vars(drv), design = design,   heights = 4:1, widths = unit(1:3, \"cm\") )"},{"path":"https://teunbrand.github.io/ggh4x/articles/Facets.html","id":"a-word-of-warning","dir":"Articles","previous_headings":"Manual facets","what":"A word of warning","title":"Facets","text":"manual facets ‘dumb’ sense don’t protect ‘illegal’ layouts. specify non-rectangular areas design argument, simply calculate range rows columns panel occupy, can lead (partially) overlapping panels. user decide right cases facets prohibitive.","code":"design <- \"   AA#   ACB   #BB \" p + facet_manual(vars(drv), design = design)"},{"path":"https://teunbrand.github.io/ggh4x/articles/Facets.html","id":"strips","dir":"Articles","previous_headings":"","what":"Strips","title":"Facets","text":"Strips important part facets indicate small multiple data displayed . ggplot2, strips married facet functions, control rendered placed. facet functions ggh4x, strips divorced facets strips allowed decide rendered placed. ggh4x facetting functions gained strip argument take new Strip class can constructed strip_*() family functions.","code":""},{"path":"https://teunbrand.github.io/ggh4x/articles/Facets.html","id":"vanilla-strips","dir":"Articles","previous_headings":"Strips","what":"Vanilla strips","title":"Facets","text":"style strips closely resembles strips ggplot2 vanilla strips can constructed using strip_vanilla() function. default strip facet_grid2(), facet_wrap2() facet_manual(). behaviour mirrors behaviour ggplot2’s strips default, come two extra arguments. clip argument controls whether content strip clipped boundaries strip background. clipping (default), line-width applied strip background effectively halved size near impossible get nicely aligned , example, axis lines. clipping , strip backgrounds full line-widths, strip text allowed exceed confines background.  second argument, size, controls size strips calculated context multi-layered strips. default, \"constant\", calculates single size every layer. Normally, makes everything looks tidy, can become awkward longer labels combined shorter labels.  Setting size = \"variable\" instead shrinks excessive spacing strips per-layer basis.","code":"p2 <- p +   theme(strip.background = element_rect(colour = \"black\", size = 2),         axis.line.y = element_line(colour = \"black\", size = 2))  p2 + facet_wrap2(vars(year), strip = strip_vanilla(clip = \"on\")) +   ggtitle('clip = \"on\"')  p2 + facet_wrap2(vars(year), strip = strip_vanilla(clip = \"off\")) +   ggtitle('clip = \"off\"') df <- data.frame(   long = paste(\"A long title that is going to make the\\n\",                \"smaller title take up too much space\"),   short = LETTERS[1:3],   x = 1:3, y = 1:3 ) p2 <- ggplot(df, aes(x, y)) +   geom_point() +   theme(strip.text.y.left = element_text(angle = 0),         strip.placement = \"outside\",         plot.title.position = \"plot\")  p2 + facet_grid2(long + short ~ ., switch = \"y\",                 strip = strip_vanilla(size = \"constant\")) +   ggtitle('size = \"constant\"') p2 + facet_grid2(long + short ~ ., switch = \"y\",                 strip = strip_vanilla(size = \"variable\")) +   ggtitle('size = \"variable\"')"},{"path":"https://teunbrand.github.io/ggh4x/articles/Facets.html","id":"themed-strips","dir":"Articles","previous_headings":"Strips","what":"Themed strips","title":"Facets","text":"extension vanilla strips themed strips. addition clip size arguments, strips allow set strip.text.* strip.background.* theme settings per-label per-layer basis. background_x/y text_x/y arguments accept list ggplot2 theme elements. number theme elements fit number strips, theme elements expanded rep_len() shown vertical strips . can bit pain construct list elements per following: list(element_text(colour = \"dodgerblue\", face = \"bold), element_text(colour = \"limegreen\", face = \"bold)). Instead, convenience functions let get exact results using elem_list_text(colour = c(\"dodgerblue\", \"limegreen\"), face = c(\"bold\", \"bold\")), slightly less verbose. also elem_list_rect() function element_rect().  list elements need homogeneous list type elements. can use NULL inherit directly theme, element_blank() skip drawing element. themed strips theory also accept extended theme elements -accepts example ggtext::element_markdown()- provided implementation element_grob() method resulting graphical objects communicate size appropriately. constraints similar constraints theme(): text elements inherit element_text background elements inherit element_rect.","code":"ridiculous_strips <- strip_themed(      # Horizontal strips      background_x = elem_list_rect(fill = c(\"limegreen\", \"dodgerblue\")),      text_x = elem_list_text(colour = c(\"dodgerblue\", \"limegreen\"),                              face = c(\"bold\", \"bold\")),      by_layer_x = TRUE,      # Vertical strips      background_y = elem_list_rect(        fill = c(\"gold\", \"tomato\", \"deepskyblue\")      ),      text_y = elem_list_text(angle = c(0, 90)),      by_layer_y = FALSE )  p + facet_grid2(class ~ drv + year, strip = ridiculous_strips) p + facet_grid2(    . ~ drv + year,    strip = strip_themed(      background_x = list(NULL, element_rect(colour = \"black\"), element_blank(),                          element_rect(fill = \"black\")),      text_x = list(NULL, NULL, NULL, element_text(colour = \"white\"))    ) )"},{"path":"https://teunbrand.github.io/ggh4x/articles/Facets.html","id":"nested-strips","dir":"Articles","previous_headings":"Strips","what":"Nested strips","title":"Facets","text":"crux nested strips already introduced nested_facets: merge strips labels height. default strips facet_nested() facet_nested_wrap() constructed using strip_nested(). nothing special makes facets suitable strips, can use nested strips facet_grid2(), facet_wrap2() facet_manual() . nested strips based strip_themed(), appearance strips can tweaked way. nested strips one extra argument, bleed, controls whether lower layer nested strips allowed merge higher layer nested strips different. example , can see 2nd 3rd panels two “f” labels aren’t merged higher strips different (“4”“5”).  contrast, bleed = TRUE, lower layer strips allowed ‘bleed’ one another even though higher level strips different. example , can see “f” strips 2nd 3rd panel merged, even though different labels (“4” “5”) higher layer strips.  Another difference strip_nested() strips, ordering layers always inner layers closer panels outer layers. felt like right decision ’re trying distinguish hierarchies, sense place fine-grained hierarchy closer data member hierarchy.","code":"p + facet_wrap2(   vars(cyl, drv), ncol = 4,   strip = strip_nested(bleed = FALSE) ) +   ggtitle('bleed = FALSE') p + facet_wrap2(   vars(cyl, drv), ncol = 4,   strip = strip_nested(bleed = TRUE) ) +   ggtitle(\"bleed = TRUE\") p + facet_grid2(   cols = vars(\"Outer label\", \"Inner label\"),   switch = \"x\", strip = strip_vanilla() ) +   ggtitle(\"strip_vanilla()\")  p + facet_grid2(   cols = vars(\"Outer label\", \"Inner label\"),   switch = \"x\", strip = strip_nested() ) +   ggtitle(\"strip_nested()\")"},{"path":"https://teunbrand.github.io/ggh4x/articles/Facets.html","id":"position-scales","dir":"Articles","previous_headings":"","what":"Position scales","title":"Facets","text":"Another thing might want tweak facets exact specifications facet’s position scale. set scales individually, can use facetted_pos_scales() combination list scales. way, can vary labels, breaks, limits, transformations even axis guides panel individually.","code":""},{"path":"https://teunbrand.github.io/ggh4x/articles/Facets.html","id":"lists-of-scales","dir":"Articles","previous_headings":"Position scales","what":"Lists of scales","title":"Facets","text":"list scales follows order facets, long set ‘free’. Tweaking position scales works many types facets, wrap, grid nested, called facets added. don’t want scales free, can use xlim() ylim() functions fix limits, facetted_pos_scales() function requires scales argument facet \"free\" order apply different scales.","code":"scales <- list(   scale_x_reverse(),   scale_x_continuous(labels = scales::dollar,                      minor_breaks = c(2.5, 4.5)),   scale_x_continuous(breaks = c(2.945, 6),                      limits = c(0, 10),                      guide = \"axis_minor\") )  p + facet_wrap(vars(drv), scales = \"free_x\") +   facetted_pos_scales(x = scales)"},{"path":"https://teunbrand.github.io/ggh4x/articles/Facets.html","id":"formula-notation","dir":"Articles","previous_headings":"Position scales","what":"Formula notation","title":"Facets","text":"might inconvenient predict programmatically data might end position, also option use two-sided formulas set scales panel. formula notation inspired dplyr::case_when() lets use left hand side (LHS) decide apply scales, right hand side (RHS) decide scales apply. LHS formula evaluated context plot’s layout. internal structure (good reasons) isn’t normally exposed, requires bit knowledge know can used. facets, plot layout data.frame contains COL, ROW PANEL columns keep track panel goes grid cells. addition, contains faceting variables, class example .  example , removed label every even column using COL %% 2 == 0, wherein COL column aforementioned layout structure. also made axes \"midsize\" \"suv\" classes red. reason don’t see red axis ticks \"subcompact\" panel applying scales prioritised based order formulas. \"subcompact\" panel also even column, ‘even columns labels’-formula first, gets excluded second formula.","code":"p +   facet_wrap(vars(class), nrow = 1, scales = \"free_x\") +   xlim(range(mpg$displ)) +   facetted_pos_scales(x = list(     COL %% 2 == 0 ~ scale_x_continuous(labels = NULL, limits = xlim),     class %in% c(\"midsize\", \"suv\", \"subcompact\") ~ scale_x_continuous(       guide = guide_axis_colour(colour = \"red\"), limits = xlim     )   ))"},{"path":"https://teunbrand.github.io/ggh4x/articles/Facets.html","id":"interaction-with-stats","dir":"Articles","previous_headings":"Position scales","what":"Interaction with stats","title":"Facets","text":"facetted_pos_scales() works makes edit facet, comes important limitation. Due way plots build facets involved, scale transformations applied calculations stat part layer. differs normal behaviour, scale transformations applied stat calculations. Therefore, recommended pre-transform data layers non-identity statistics aes() mapping. example go wrong shown .  plan using facetted_pos_scales() tweak axis plots, take look position guides!","code":"set.seed(0) df <- data.frame(   x = rlnorm(100, 10) )  # Normally data is transformed prior to stat calculations ggplot(df, aes(x)) +   geom_density() +   scale_x_log10() +   ggtitle(\"standard log10 scale\")  # This can give problems when combining stat calculations with facetted  # position scale transformations. ggplot(df, aes(x)) +   geom_density() +   facetted_pos_scales(x = list(scale_x_log10())) +   ggtitle(\"facetted scale\")  # Pre-transformed data ggplot(df, aes(log10(x))) +   geom_density() +   facetted_pos_scales(x = list(scale_x_continuous())) +   ggtitle(\"facetted scale +\\npre-transformation\")"},{"path":"https://teunbrand.github.io/ggh4x/articles/Facets.html","id":"panel-sizes","dir":"Articles","previous_headings":"","what":"Panel sizes","title":"Facets","text":"Lastly, can also set sizes panels want. function force_panelsizes() can let set relative absolute sizes rows columns. function applicable facets follow typical ggplot2 conventions. includes, limited , facet functions ‘ggplot2’, ‘ggforce’ package, ‘ggh4x’ possibly others (’s redundant facet_manual() though). Notably, also applies facet_null(), default facet every plot.  settings overrule coordinates’ theme’s aspect ratio space = \"free\" facet arguments. default, rows columns set relative within . respect = TRUE, rows columns relative units become also relative rows columns, can see plot . Alternatively, can set absolute units grid::unit() function. , need added facets.  think breaks density plot packed, tweak facetted_pos_scales()? Note NULL signals default scale used.","code":"p + force_panelsizes(rows = unit(2, \"cm\"), cols = unit(2, \"in\")) lvls <- c(\"Points\", \"Density\") g <- ggplot(faithful) +   geom_point(aes(waiting, eruptions),              data = ~ cbind(.x, facet = factor(lvls[1], lvls))) +   geom_density(aes(y = eruptions),                data = ~ cbind(faithful, facet = factor(lvls[2], lvls))) +   facet_grid(~ facet, scales = \"free_x\") +   force_panelsizes(cols = c(1, 0.2),                     rows = c(0.5),                    respect = TRUE) g g + facetted_pos_scales(x = list(NULL, scale_x_continuous(breaks = c(0, 0.2, 0.4))))"},{"path":"https://teunbrand.github.io/ggh4x/articles/Miscellaneous.html","id":"multiple-colour-scales","dir":"Articles","previous_headings":"","what":"Multiple colour scales","title":"Miscellaneous","text":"One colour scale sometimes enough describe data. can map several variables colours scale_colour_multi() data separate layers. works like scale_colour_gradientn(), can declare aesthetics provide arguments vectorised way, parallel aesthetics argument. example , list() colours given, 1 list elements becomes argument first scale, 2nd list element goes second scale . arguments expect input length one can given vector.  can combine continuous discrete colour scales slightly verbose scale_listed(). can illustrate heatmap, wherein maybe want use discrete fill annotation, continuous fill heatmap values. example also includes geom_tilemargin(), conveniently can annotate heatmaps margin plot. can provide correct fill scales list, long match new aesthetics scales declare old aesthetic replace.","code":"# Separating layers by species and declaring (yet) unknown aesthetics g <- ggplot(iris, aes(Sepal.Width, Sepal.Length)) +   geom_point(aes(swidth = Sepal.Width),              data = ~ subset(., Species == \"setosa\")) +   geom_point(aes(pleng = Petal.Length),              data = ~ subset(., Species == \"versicolor\")) +   geom_point(aes(pwidth = Petal.Width),              data = ~ subset(., Species == \"virginica\")) +   facet_wrap(~ Species, scales = \"free_x\") #> Warning: Ignoring unknown aesthetics: swidth #> Warning: Ignoring unknown aesthetics: pleng #> Warning: Ignoring unknown aesthetics: pwidth  # This generated quite some warnings, but this is no reason to worry!  g + scale_colour_multi(   aesthetics = c(\"swidth\", \"pleng\", \"pwidth\"),   # Providing colours as a list distributes list-elements over different scales   colours = list(c(\"black\", \"green\"),                  c(\"gray\",  \"red\"),                  c(\"white\", \"blue\")),   guide = list(guide_colourbar(barheight = unit(35, \"pt\"))) ) # Reshaping the iris dataset for heatmap purposes iriscor <- cor(t(iris[, 1:4])) iriscor <- data.frame(   x = as.vector(row(iriscor)),   y = as.vector(col(iriscor)),   correlation = as.vector(iriscor) ) iris_df <- transform(iris, id = seq_len(nrow(iris)))  # Setting up the heatmap g <- ggplot(iris_df, aes(id, id)) +   geom_tilemargin(aes(species = Species)) +   geom_raster(aes(x, y, cor = correlation),               data = iriscor) +   coord_fixed() #> Warning: Ignoring unknown aesthetics: species #> Warning: Ignoring unknown aesthetics: cor  g + scale_listed(scalelist = list(   scale_fill_distiller(palette = \"RdBu\", aesthetics = \"cor\"),   scale_fill_brewer(palette = \"Set1\", aesthetics = \"species\") ), replaces = c(\"fill\", \"fill\"))"},{"path":"https://teunbrand.github.io/ggh4x/articles/Miscellaneous.html","id":"string-legends","dir":"Articles","previous_headings":"","what":"String legends","title":"Miscellaneous","text":"simple effective way illustrate straightforward mapping colour fill aesthetics, use coloured text. ggh4x, can setting guide = \"stringlegend\" argument colour fill scales, set guides(colour = \"stringlegend\").  legends keys, key-related options absent use guide_stringlegend(). However, label related options like family, face, size added, well options control spacing labels spacing/spacing.x/spacing.y.","code":"ggplot(diamonds, aes(price, carat, colour = clarity)) +   geom_point(shape = \".\") +   scale_colour_brewer(palette = \"Dark2\", guide = \"stringlegend\") p <- ggplot(mpg, aes(displ, hwy)) +   geom_point(aes(colour = class))  p + guides(colour = guide_stringlegend(face = \"bold\", spacing = 15))  p + guides(colour = guide_stringlegend(spacing.x = 0, spacing.y = 5,                                        family = \"mono\", ncol = 2))"},{"path":"https://teunbrand.github.io/ggh4x/articles/Miscellaneous.html","id":"point-paths","dir":"Articles","previous_headings":"","what":"Point paths","title":"Miscellaneous","text":"return good old type = 'b' plot base R! geom makes point connected line starts ends small distance points . Calculating small offsets absolute coordinates instead data coordinates means stable different aspect ratios.  size small offset can controlled mult multiplier argument, otherwise dependant average linesize aesthetic stroke size size aesthetic point size. Also note connecting lines disappear points spaced closely together.  added bonus can also use point path cartesian coordinates get consistent curves.","code":"set.seed(0) df <- data.frame(   x = 1:10,   y = cumsum(rnorm(10)) )  p <- ggplot(pressure, aes(temperature, pressure)) +   geom_pointpath()  p + theme(aspect.ratio = 0.5) p + theme(aspect.ratio = 2) ggplot(pressure, aes(temperature, pressure)) +   geom_pointpath(linesize = 2, size = 2, mult = 1) p + coord_polar(theta = \"y\")"},{"path":"https://teunbrand.github.io/ggh4x/articles/Miscellaneous.html","id":"polygon-rasters","dir":"Articles","previous_headings":"","what":"Polygon rasters","title":"Miscellaneous","text":"want rasters just displaying , geom_raster() related tile- rect geoms can bit inflexible. allow transformations rasters, geom_polygonraster(), reparametrises raster x y parametrised polygons. less efficient regular raster, flexible. position_lineartrans() can perform linear transformations coordinates.","code":"df <- data.frame(   x = as.vector(row(volcano)),   y = as.vector(col(volcano)),   value = as.vector(volcano) )  g <- ggplot(df, aes(x, y, fill = value)) +   scale_fill_viridis_c(guide = \"none\") +   theme_void()  g + geom_polygonraster(position = position_lineartrans(shear = c(0.2, 0.2))) +   coord_fixed()  g + geom_polygonraster(position = position_lineartrans(angle = 45)) +   coord_fixed()  g + geom_polygonraster() + coord_polar()"},{"path":"https://teunbrand.github.io/ggh4x/articles/Miscellaneous.html","id":"aiming-text","dir":"Articles","previous_headings":"","what":"Aiming text","title":"Miscellaneous","text":"might sometimes want put text plot particular angle. might want annotate something ‘away’ something else, case can sometimes bit pain calculate correct angle, conclude resizing plot angle correct. geom_text_aimed() text rotated angle parallel line going text’s [x,y] coordinate point [xend,yend]. example , ‘aim’ text middle plot.  example might bit silly, might easier show usefulness trying annotate pieces polar coordinates chart. Specifically kinds charts, default [xend,yend] position [-Inf, Inf].  specifying angle geom, calculated angle added, angle = 90 means text become perpendicular point defined [xend, yend].","code":"ggplot(transform(mtcars, car = rownames(mtcars)),         aes(mpg, wt)) +   geom_point(aes(colour = as.factor(cyl))) +   geom_text_aimed(aes(label = car),                    hjust = -0.2, size = 3,                   xend = sum(range(mtcars$mpg)) / 2,                   yend = sum(range(mtcars$wt)) / 2) +   coord_cartesian(clip = \"off\") ggplot(mpg, aes(factor(1), fill = class)) +   geom_bar(show.legend = FALSE, position = \"fill\") +   geom_text_aimed(aes(x = 1.2, label = class, group = class),                   position = position_fill(vjust = 0.5),                   stat = \"count\") +   coord_polar(\"y\") +   theme_void() ggplot(diamonds, aes(cut, fill = clarity)) +   geom_bar(width = 1) +   geom_text_aimed(aes(label = cut, group = cut),                   angle = 90,                   stat = \"count\", nudge_y = 2000) +   scale_x_discrete(labels = NULL) +   coord_polar()"},{"path":"https://teunbrand.github.io/ggh4x/articles/PositionGuides.html","id":"a-primer-on-position-guides","dir":"Articles","previous_headings":"","what":"A primer on position guides","title":"Position Guides","text":"Position guides ticks, labels lines drawn x- y-axes. Vanilla ggplot2 comes two position guides: guide_axis(), draws axes, guide_none(), skips drawing anything. ggh4x package additional axes described . convenient way specify guides drawn guides() function, let’s draw x, x.sec, y y.sec axes. can either specify guide name omitting guide_* prefix, e.g. \"axis\", calling guide constructor, guide_axis(), allows give additional arguments. Unless specify position argument guides , x x.sec bottom top axes respectively likewise y y.sec left right axes.  alternative way setting position guides use guide argument position scales. Note position scale guide position argument. guide’s position overrules scale’s position, guide’s position unspecified, inherits scale’s position.  final place can specify axes argument secondary axes continuous position scales.  main takeaways apply also ggh4x’s position guides following: Position guides can set guides() function argument position scales. One can use name guides (\"axis\") take defaults, use constructor function guide_axis() pass specific arguments.","code":"g <- ggplot(mtcars, aes(wt, mpg)) +   geom_point() +   theme(axis.line = element_line(colour = \"black\"))  g + guides(   x = guide_none(title = \"x\"),   x.sec = guide_axis(title = \"x.sec\"),   y = \"none\",   y.sec = \"axis\" ) g + scale_x_continuous(   position = \"bottom\",   guide = guide_axis(position = \"top\") ) g + scale_x_continuous(   sec.axis = dup_axis(breaks = 2:4 + 0.5,                       guide = guide_axis(angle = 45)) )"},{"path":"https://teunbrand.github.io/ggh4x/articles/PositionGuides.html","id":"coloured-axis","dir":"Articles","previous_headings":"","what":"Coloured axis","title":"Position Guides","text":"position guide convenience argument colour set colour axis elements . simply circumvents set three separate theme elements theme() function. colour argument available ggh4x’s position guides.  motivation axis used mild inconvenience set colour theme elements, wanted colour correspondence data secondary axis.","code":"# Setting all theme elements is a mild inconvenience. g + theme(   axis.line.x  = element_line(colour = \"forestgreen\"),   axis.ticks.x = element_line(colour = \"forestgreen\"),   axis.text.x  = element_text(colour = \"forestgreen\")  )  # A little bit easier g + guides(x = guide_axis_colour(colour = \"forestgreen\")) ggplot(economics, aes(date)) +   geom_line(aes(y = unemploy)) +   geom_line(aes(y = pop / 30), colour = \"red\") +   scale_y_continuous(     sec.axis = sec_axis(       ~ .x * 30, name = \"pop\",       guide = guide_axis_colour(colour = \"red\"))   ) +   theme(axis.line.y = element_line())"},{"path":"https://teunbrand.github.io/ggh4x/articles/PositionGuides.html","id":"truncated-axes","dir":"Articles","previous_headings":"","what":"Truncated axes","title":"Position Guides","text":"truncated axes special axis: just makes axis line shorter. default, trims axis line outermost break positions.  can control far axis line trimmed setting trunc_lower trunc_upper options guide function. truncation arguments supported position guides described .  Besides scalar truncation points, truncation points can also take vectors give impression discontinuous axis. Alternatively, can also give functions, formulas, take existing break positions return truncation points.  particular use-case ’ve found wilds internet, label divergent bar charts separated axes.","code":"g + guides(x = \"axis_truncated\") # Using grid units to specify data-independent truncation points. g + guides(x = guide_axis_truncated(trunc_lower = unit(0.1, \"npc\"),                                     trunc_upper = unit(0.9, \"npc\")))  # Using atomic vectors are interpreted as data points that should be mapped. g + guides(x = guide_axis_truncated(trunc_lower = 2.5,                                     trunc_upper = 4.5)) g + guides(x = guide_axis_truncated(trunc_lower = c(2, 4),                                     trunc_upper = c(3, 5)),            y = guide_axis_truncated(trunc_lower = ~ .x - 1,                                     trunc_upper = ~ .x + 1)) df <- data.frame(x = seq(-3, 3, length.out = 6), y = LETTERS[1:6])  ggplot(df, aes(x, y)) +   geom_col() +   scale_x_continuous(     breaks = -3:0, guide = \"axis_truncated\",     sec.axis = dup_axis(       breaks = 0:3, guide = \"axis_truncated\"     )   ) +   theme(axis.line.x = element_line())"},{"path":"https://teunbrand.github.io/ggh4x/articles/PositionGuides.html","id":"manual-axes","dir":"Articles","previous_headings":"","what":"Manual axes","title":"Position Guides","text":"idea behind manual axes allow greater freedom breaks labels defined. particular, one can use grid units set position breaks, well atomic data mapped scale, set label attributes vectors.  might seem immediately exiting, consider moment discrete position scales don’t support secondary axes. Manual axis guides extend capabilities discrete scales offering way specify secondary axes. One way use provide additional information categories.  Another use case highlight select cases otherwise crowded axis. information dendrogram axis follows .","code":"g + guides(y.sec = guide_axis_manual(   breaks = unit(c(1, 3), \"cm\"),    labels = expression(\"treshold\"^2, \"annotation\"[3]),   label_colour = c(\"red\", \"blue\"), label_size = c(8, 12) )) tab <- table(diamonds$cut)  ggplot(diamonds, aes(cut, price)) +   geom_violin() +   guides(x.sec = guide_axis_manual(     breaks = names(tab),     labels = paste0(\"n = \", tab)   )) highlight <- c(\"New York\", \"California\", \"Alabama\", \"Hawaii\")  clust <- hclust(dist(USArrests))  # Melting USArrests df <- data.frame(   state = rownames(USArrests)[as.vector(row(USArrests))],   crime = colnames(USArrests)[as.vector(col(USArrests))],   value = as.vector(as.matrix(USArrests)),    row.names = NULL )  ggplot(df, aes(crime, state, fill = value)) +   geom_raster() +   scale_y_dendrogram(hclust = clust, labels = NULL) +   guides(y.sec = guide_axis_manual(breaks = highlight, labels = highlight))"},{"path":"https://teunbrand.github.io/ggh4x/articles/PositionGuides.html","id":"minor-ticks","dir":"Articles","previous_headings":"","what":"Minor ticks","title":"Position Guides","text":"Perhaps useful addition axis guide also place tick marks places minor breaks .  guide constructor, guide_axis_minor() unique arguments, positions minor breaks taken directly scale. Therefore, can use minor_breaks argument position scale determine minor ticks drawn.  length minor ticks controlled ggh4x.axis.ticks.length.minor theme element, specified relative major ticks using rel() function.","code":"g + guides(x = \"axis_minor\", y = \"axis_minor\") g + scale_x_continuous(   minor_breaks = seq(2, 4, by = 0.2),   guide = \"axis_minor\" ) g + guides(x = \"axis_minor\") +   theme(axis.ticks.length.x = unit(0.5, \"cm\"),         ggh4x.axis.ticks.length.minor = rel(0.5))"},{"path":"https://teunbrand.github.io/ggh4x/articles/PositionGuides.html","id":"logarithmic-ticks","dir":"Articles","previous_headings":"","what":"Logarithmic ticks","title":"Position Guides","text":"variation minor ticks placing ticks logarithmic axes. thing note work best log10 transformations. ticks now come three lengths, major length, minor length referred ‘mini’ length. Like minor ticks, mini ticks also defined relative major ticks.  difference annotation_logticks function default, ticks placed outside panel controlled theme. get good looking log-ticks outside, ’d set clipping dodge axis text. Whereas using log ticks guide takes care extra steps naturally.  Inversely, can also place axis ticks inside negative values axis.ticks.length, need dodge axis text .","code":"pres <- ggplot(pressure, aes(temperature, pressure)) +   geom_line()  pres + scale_y_log10(guide = \"axis_logticks\") +   theme(axis.ticks.length.y = unit(0.5, \"cm\"),         ggh4x.axis.ticks.length.minor = rel(0.5),         ggh4x.axis.ticks.length.mini = rel(0.2)) # Using annotation log-ticks pres + scale_y_log10() +   annotation_logticks(sides = 'l', outside = TRUE) +   coord_cartesian(clip = \"off\") +   theme(axis.text.y = element_text(margin = margin(r = 10)))  # Using axis_logticks, setting tick length equivalently pres + scale_y_log10(guide = \"axis_logticks\") +   theme(axis.ticks.length.y = unit(0.3, \"cm\")) pres + scale_y_log10(guide = \"axis_logticks\") +   theme(axis.ticks.length.y = unit(-0.3, \"cm\"),         axis.text.y = element_text(margin = margin(r = 10)))"},{"path":"https://teunbrand.github.io/ggh4x/articles/PositionGuides.html","id":"nested-relations","dir":"Articles","previous_headings":"","what":"Nested relations","title":"Position Guides","text":"Discrete variables kind categories interactions can laid nested fashion. can convenient indicate example group membership. example use interaction() function paste together name item group belongs , \".\" . guide_axis_nested() function tries split labels \".\" symbol tease apart item group membership.  Note ordering x-axis different order input data. alternative can tried using paste0() function paste together names. case , names automatically ordered alphabetically, group membership information disorganised paste0(). , use delim argument split labels based delimiter. extra tildes (~) show split happens.  counter pains interaction() paste0() ordering items, ggh4x weave_factors() convenience function attempts preserve natural order factor levels occur.  looks indicator line can controlled ggh4x.axis.nestline theme element (also *.x *.y variants), default takes values axis ticks. example , indicator line red takes colour ticks, thicker size set larger. Also text underneath indicators can made different ggh4x.axis.nesttext.(x/y) elements.  Lastly, guide also stack multiple group memberships.","code":"df <- data.frame(   item = c(\"Coffee\", \"Tea\", \"Apple\", \"Pear\", \"Car\"),   type = c(\"Drink\", \"Drink\", \"Fruit\", \"Fruit\", \"\"),   amount = c(5, 1, 2, 3, 1),   stringsAsFactors = FALSE )  ggplot(df, aes(interaction(item, type), amount)) +   geom_col() +   guides(x = \"axis_nested\") ggplot(df, aes(paste0(item, \"~nonsense~\", type), amount)) +   geom_col() +   guides(x = guide_axis_nested(delim = \"nonsense\")) ggplot(df, aes(weave_factors(item, type), amount)) +   geom_col() +   guides(x = \"axis_nested\") ggplot(df, aes(weave_factors(item, type), amount)) +   geom_col() +   guides(x = \"axis_nested\") +   theme(     axis.ticks = element_line(colour = \"red\"),     ggh4x.axis.nestline.x = element_line(size = 2),     ggh4x.axis.nesttext.x = element_text(colour = \"blue\")   ) df$type2 <- c(rep(\"Consumables\", 4), \"Vehicle\") df$appletea <- c(\"\", rep(\"Ingredient of apple tea\", 2), rep(NA, 2))  ggplot(df, aes(weave_factors(item, type, appletea, type2), amount)) +   geom_col() +   guides(x = \"axis_nested\")"},{"path":"https://teunbrand.github.io/ggh4x/articles/PositionGuides.html","id":"dendrograms","dir":"Articles","previous_headings":"","what":"Dendrograms","title":"Position Guides","text":"Another thing people might want indicate hierarchical clustering relationships among variables. accommodate , scale_(x/y)_dendrogram(), uses ggdendro package convert hclust object dendrogram. Since set scales dependent aesthetics see aesthetics, dendrogram scales requires provide result hierarchical clustering. using scale, reorders variables according clustering result, places dendrogram labels.  Since dendrogram replaces axis ticks, uses theme element takes looks. size dendrogram also controlled tick length: ten times axis.tick.length element.  also guide_dendro() function tune guide behaviour. intended used within scale_(x/y)_dendrogram() function.  Using guide_dendro() outside dendrogram scales recommended, break relationship axis order dendrogram displayed. discourage use, made slightly inconvenient use function outside dendrogram scales: manually supply digested dendrogram. Notice y-axis order dendrogram don’t match implied relationship thus false.","code":"clusters <- hclust(dist(USArrests), \"ave\")  # reshaping USArrests df <- data.frame(   State = rownames(USArrests)[row(USArrests)],   variable = colnames(USArrests)[col(USArrests)],   value = unname(do.call(c, USArrests)) )  g <- ggplot(df, aes(variable, State, fill = value)) +   geom_raster() g + scale_y_dendrogram(hclust = clusters) g + scale_y_dendrogram(hclust = clusters) +   theme(   axis.ticks.y = element_line(size  = 2, lineend = \"round\"),   axis.ticks.length.y = unit(10, \"pt\") ) g + scale_y_dendrogram(guide = guide_dendro(position = \"right\"),                         hclust = clusters) # Don't do this ggplot(df, aes(variable, State, fill = value)) +   geom_raster() +   guides(y = guide_dendro(dendro = ggdendro::dendro_data(clusters)))"},{"path":"https://teunbrand.github.io/ggh4x/articles/Statistics.html","id":"theoretical-densities","dir":"Articles","previous_headings":"","what":"Theoretical densities","title":"Statistics","text":"One useful tools inspecting data view density datapoints. great ways , histograms kernel density estimates (KDEs). However, sometimes might wonder density data compares density theoretical distribution, normal Poisson distribution. stat_theodensity() function estimates necessary parameters range distributions calculates probability density continuous distributions probability mass discrete distributions. function uses maximum likelihood procedures fitdistrplus package.","code":""},{"path":"https://teunbrand.github.io/ggh4x/articles/Statistics.html","id":"continuous-distributions","dir":"Articles","previous_headings":"Theoretical densities","what":"Continuous distributions","title":"Statistics","text":"Plotting continuous distributions straightforward enough. just tell stat_theodensity() distribution ’d like fit. automatically performs fitting groups separately, shown example artificially split faithful data.  can compare kernel density estimates, empirical.  tricky distributions exist sensible starting values, Student t-distribution F-distribution. provide sensible-ish starting value degrees freedom .","code":"df <- faithful df$group <- ifelse(df$eruptions > 3, \"High\", \"Low\")  ggplot(df, aes(eruptions, colour = group)) +   stat_theodensity(distri = \"gamma\") +   geom_rug() ggplot(df, aes(eruptions, colour = group)) +   stat_theodensity(distri = \"gamma\",                     aes(linetype = \"Theoretical\")) +   stat_density(aes(linetype = \"Kernel Estimates\"),                 geom = \"line\", position = \"identity\") +   geom_rug() tdist <- data.frame(   x = c(rt(1000, df = 2), rt(1000, df = 4)),   group = rep(LETTERS[1:2], each = 1000) )  ggplot(tdist, aes(x, colour = group)) +   stat_theodensity(distri = \"t\", start.arg = list(df = 3))  fdist <- data.frame(   x = c(rf(1000, df1 = 4, df2 = 8), rf(1000, df1 = 8, df2 = 16)),   group = rep(LETTERS[1:2], each = 1000) )  ggplot(fdist, aes(x, colour = group)) +   stat_theodensity(distri = \"f\", start.arg = list(df1 = 3, df2 = 3))"},{"path":"https://teunbrand.github.io/ggh4x/articles/Statistics.html","id":"discrete-distributions","dir":"Articles","previous_headings":"Theoretical densities","what":"Discrete distributions","title":"Statistics","text":"way stat_theodensity() handles discrete distributions similar handles continuous distributions. main difference discrete distributions require whole number integer input.  practical difference can seen : using simple lines appropriate discrete distributions, imply continuity . Instead, one can work centred steps:  perhaps appropriately, can display distributions probability masses lollipops.","code":"correct <- data.frame(   x = c(rpois(1000, 5), rnbinom(1000, 2, mu = 5)),   group = rep(LETTERS[1:2], each = 1000) )  incorrect <- correct # Change a number to non-integer incorrect$x[15] <- sqrt(2)  ggplot(incorrect, aes(x, colour = group)) +   stat_theodensity(distri = \"nbinom\") #> Error: A discrete distribution can not be fitted to continuous data  ggplot(correct, aes(x, colour = group)) +   stat_theodensity(distri = \"nbinom\") ggplot(correct, aes(x, colour = group)) +   stat_theodensity(distri = \"nbinom\", geom = \"step\",                    position = position_nudge(x = -0.5)) ggplot(correct, aes(x, colour = group)) +   stat_theodensity(distri = \"nbinom\", geom = \"segment\",                    aes(xend = after_stat(x), yend = 0), alpha = 0.5) +   stat_theodensity(distri = \"nbinom\", geom = \"point\",                    aes(xend = after_stat(x), yend = 0)) #> Warning: Ignoring unknown aesthetics: xend, yend"},{"path":"https://teunbrand.github.io/ggh4x/articles/Statistics.html","id":"comparing-different-distributions","dir":"Articles","previous_headings":"Theoretical densities","what":"Comparing different distributions","title":"Statistics","text":"Let’s say given task comparing well different distributions fit data. can use qualitative methods, look distributions still useful tool. ’ll generate data see works. ’ll fit normal Cauchy distribution data plot densities.  quite hard see distribution appropriately fits data. get clearer view, can use histogram instead rug plot. problem though default, histograms work count data, whereas densities integrated sum 1.  two possible solutions : Scale histogram densities. Scale densities counts. nice thing ggplot2 provides access computed variables after_stat() function. Luckily, one computed variables histograms already density.  Now can see probably Cauchy distribution fits better normal distribution. Alternatively, can also scale densities counts. , must know binwidth histogram. Since different layers ggplot2 don’t communicate, set manually. Just like histograms provide density computed variable, stat_theodensity() provide count computed variable, density multiplied number observations.","code":"set.seed(0) df <- data.frame(x = rnorm(1000, 10, 1/rgamma(1000, 5, 0.2)))  ggplot(df, aes(x)) +   stat_theodensity(aes(colour = \"Normal\"), distri = \"norm\") +   stat_theodensity(aes(colour = \"Cauchy\"), distri = \"cauchy\") +   geom_rug(alpha = 0.1) ggplot(df, aes(x)) +   geom_histogram(binwidth = 0.01, alpha = 0.5) +   stat_theodensity(aes(colour = \"Normal\"), distri = \"norm\") +   stat_theodensity(aes(colour = \"Cauchy\"), distri = \"cauchy\") ggplot(df, aes(x)) +   geom_histogram(aes(y = after_stat(density)),                  binwidth = 0.01, alpha = 0.5) +   stat_theodensity(aes(colour = \"Normal\"), distri = \"norm\") +   stat_theodensity(aes(colour = \"Cauchy\"), distri = \"cauchy\") binwidth <- 0.01 ggplot(df, aes(x)) +   geom_histogram(alpha = 0.5, binwidth = binwidth) +   stat_theodensity(aes(y = after_stat(count * binwidth),                        colour = \"Normal\"),                     distri = \"norm\") +   stat_theodensity(aes(y = after_stat(count * binwidth),                        colour = \"Cauchy\"),                     distri = \"cauchy\")"},{"path":"https://teunbrand.github.io/ggh4x/articles/Statistics.html","id":"rolling-kernels","dir":"Articles","previous_headings":"","what":"Rolling kernels","title":"Statistics","text":"rolling kernel method generates trend line doesn’t require specifying model, also bad extrapolating. similar rolling window, data need equally spaced. attempt illustrating concept ’ll find .  every position x-axis, kernel (: Gaussian kernel blue green) determines weight datapoints based distance x-axis position measured. , weighted mean calculated determines values y-axis (red dots).","code":""},{"path":"https://teunbrand.github.io/ggh4x/articles/Statistics.html","id":"examples","dir":"Articles","previous_headings":"Rolling kernels","what":"Examples","title":"Statistics","text":"example Gaussian kernel mpg dataset.  pretty easy visualise areas uncertainty setting alpha scaled weights. emphasises data-dense areas lines.","code":"ggplot(mpg, aes(displ, hwy, colour = class)) +   geom_point() +   stat_rollingkernel() ggplot(mpg, aes(displ, hwy, colour = class)) +   geom_point() +   stat_rollingkernel(aes(alpha = after_stat(scaled)))"},{"path":"https://teunbrand.github.io/ggh4x/articles/Statistics.html","id":"relation-to-kernel-density-estimates","dir":"Articles","previous_headings":"Rolling kernels","what":"Relation to kernel density estimates","title":"Statistics","text":"may seem pretty trivial, using weights y position gives something similar kernel density estimates. defaults bandwidth differ slightly, exaggerate similarity setting equal .","code":"ggplot(mpg, aes(displ, hwy, colour = class)) +   stat_rollingkernel(aes(y = stage(hwy, after_stat = weight),                          linetype = \"Rolling\\nKernel\"),                      bw = 0.3) +   stat_density(aes(displ, colour = class,                    y = after_stat(count),                    linetype = \"KDE\"),                bw = 0.3,                inherit.aes = FALSE, geom = \"line\", position = \"identity\") +   scale_linetype_manual(values = c(2, 1))"},{"path":"https://teunbrand.github.io/ggh4x/articles/Statistics.html","id":"rolling-mean","dir":"Articles","previous_headings":"Rolling kernels","what":"Rolling mean","title":"Statistics","text":"final note stat, rolling mean-equivalent can calculated using \"mean\" kernel. setting kernel \"unif\", since uses uniform distribution kernel. Typically, bit blocky using Gaussian kernels.","code":"ggplot(mpg, aes(displ, hwy, colour = class)) +   geom_point() +   stat_rollingkernel(kernel = \"mean\", bw = 1)"},{"path":[]},{"path":"https://teunbrand.github.io/ggh4x/articles/Statistics.html","id":"motivation","dir":"Articles","previous_headings":"Difference","what":"Motivation","title":"Statistics","text":"Many people try illustrate difference two lines might run following problem. example want illustrate difference uempmed psavert variables economics dataset, change colour ribbon depending variables larger. groups inferred fill colour, small islands uempmed > psavert true, ribbon drawn overlapping way. makes perfect sense many visualisations, inconvenience just want plot difference.  circumvent inconvenience, stat_difference() uses run-length encoding re-assign groups adds sign variable keep track two variables larger. default, fill populated sign variable.","code":"g <- ggplot(economics, aes(date))  g + geom_ribbon(aes(ymin = pmin(psavert, uempmed),                      ymax = pmax(psavert, uempmed),                     fill = uempmed > psavert),                 alpha = 0.8) g + stat_difference(aes(ymin = psavert, ymax = uempmed),                   alpha  = 0.8)"},{"path":"https://teunbrand.github.io/ggh4x/articles/Statistics.html","id":"controlling-the-fill","dir":"Articles","previous_headings":"Difference","what":"Controlling the fill","title":"Statistics","text":"4 dates dataset uempmed == psavert true, stat_difference() include 0 level. ribbon height occurs, don’t typically see zero-difference level. levels argument included assert control sign computed variable displayed. example , remove 0 level giving NA sign telling fill scale translate NAs.","code":"g + stat_difference(aes(ymin = psavert, ymax = uempmed),                     levels = c(\"More uempmed\", \"More psavert\", NA),                     alpha  = 0.8) +   scale_fill_discrete(na.translate = FALSE)"},{"path":"https://teunbrand.github.io/ggh4x/articles/Statistics.html","id":"interpolation","dir":"Articles","previous_headings":"Difference","what":"Interpolation","title":"Statistics","text":"additional nicety stat_difference() interpolates cross-points lines. ’s visible densely populated graph , can generate dummy data show mean.","code":"df <- data.frame(   x = c(1:4), ymin = c(0, 1, 2, 2.5), ymax = c(2.5, 2, 1, 0.5) )  g <- ggplot(df, aes(x, ymin = ymin, ymax = ymax)) +   guides(fill = 'none') +   geom_point(aes(y = ymin)) +   geom_point(aes(y = ymax))  g + geom_ribbon(aes(fill = ymax < ymin)) +   ggtitle(\"Plain ribbon\")  g + stat_difference() +   ggtitle(\"stat_difference()\")"},{"path":"https://teunbrand.github.io/ggh4x/articles/Statistics.html","id":"function-x-y","dir":"Articles","previous_headings":"","what":"Function X, Y","title":"Statistics","text":"Sometimes, just want calculate simple function x- y-positions data group. stat_funxy() comes . takes two functions arguments, one applied x-coordinates one applied y-coordinates. primary limitation stat use functions supposed work x- y-positions simultaneously. example, pretty easy combine range mean construct range indicators.","code":"df <- faithful df$group <- ifelse(df$eruptions > 3, \"High\", \"Low\")  ggplot(df, aes(waiting, eruptions, group = group)) +   geom_point() +   stat_funxy(aes(colour = group),              funx = range, funy = mean, geom = \"line\",              arrow = arrow(ends = \"both\"))"},{"path":"https://teunbrand.github.io/ggh4x/articles/Statistics.html","id":"centroids-and-midpoints","dir":"Articles","previous_headings":"Function X, Y","what":"Centroids and midpoints","title":"Statistics","text":"also two variations stat_funxy() stat_centroid() stat_midpoint(). default function arguments stat_funxy() nothing, default stat_centroid() take means x- y-positions stat_midpoint() takes mean range. hood, still stat_funxy(), default functions. centroid midpoint stats convenient label groups, example.","code":"ggplot(df, aes(waiting, eruptions, group = group)) +   geom_point() +   stat_centroid(aes(label = \"Centroid\"), colour = \"dodgerblue\",                 geom = \"label\") +   stat_midpoint(aes(label = \"Midpoint\"), colour = \"limegreen\",                 geom = \"label\")"},{"path":"https://teunbrand.github.io/ggh4x/articles/Statistics.html","id":"cropping-data","dir":"Articles","previous_headings":"Function X, Y","what":"Cropping data","title":"Statistics","text":"general case data cropped lengths function outputs, can change behaviour setting crop_other = FALSE. might convenient might aesthetics care , group. cropping data probably makes sense functions provide return single summary statistic though.","code":"ggplot(df, aes(waiting, eruptions, group = group)) +   stat_centroid(aes(xend = waiting, yend = eruptions, colour = group),                 geom = \"segment\", crop_other = FALSE) +   geom_point(size = 0.25)"},{"path":"https://teunbrand.github.io/ggh4x/articles/Statistics.html","id":"run-length-encoding","dir":"Articles","previous_headings":"","what":"Run length encoding","title":"Statistics","text":"Run length encoding (RLE) useful data compression mechanism, can also useful plotting check subsequent conditions fulfilled. default behaviour stat_rle() draw rectangles regions series values (run) value. Let’s say following series: ----B-B-B-C-C-D series can compacted run length encoding, can also useful extract following properties:","code":""},{"path":"https://teunbrand.github.io/ggh4x/articles/Statistics.html","id":"examples-1","dir":"Articles","previous_headings":"Run length encoding","what":"Examples","title":"Statistics","text":"example , ’ll use cut() function divide y-values three bins, use stat_rle() draw rectangles datapoints fall bins.  can made slightly pleasing closing gaps rectangles.","code":"df <- data.frame(   x = seq(0, 10, length.out = 100) ) df$y <- cos(df$x)  ggplot(df, aes(x, y)) +   stat_rle(aes(label = cut(y, breaks = 3))) +   geom_point() ggplot(df, aes(x, y)) +   stat_rle(aes(label = cut(y, breaks = 3)),            align = \"center\") +   geom_point()"},{"path":"https://teunbrand.github.io/ggh4x/articles/Statistics.html","id":"using-computed-variables","dir":"Articles","previous_headings":"Run length encoding","what":"Using computed variables","title":"Statistics","text":"alternative use case stat_rle() use computed variables describe series data. example, ’d like summarise graph just ’s runs, might interested order runs long runs . make use ggplot2’s after_stat() stage() functions, can grab information stat.","code":"ggplot(df) +   stat_rle(aes(stage(x, after_stat = run_id),                after_stat(runlength),                label = cut(y, breaks = 3),                fill = after_stat(runvalue)),            geom = \"col\")"},{"path":"https://teunbrand.github.io/ggh4x/articles/ggh4x.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting started","title":"Introduction to ggh4x","text":"Using ggh4x different using ggplot2, function following API conventions. example types things , much ggh4x functions reasonably fit single plot.","code":"library(ggplot2) library(ggh4x)  # Setting up some random data n <- 200 df <- data.frame(   x = c(rpois(n, 25),         rnbinom(n, 5, 0.2),         rgamma(n, 30, 1.5),         rchisq(n, 15)),   distribution = rep(c(\"Poisson\", \"Negative Binomial\",                         \"Gamma\", \"Chi-squared\"), each = n),   type = rep(c(\"Discrete\", \"Continuous\"), each = 2 * n) )  ggplot(df, aes(x, y = after_stat(count),                fill = distribution, colour = distribution)) +   geom_histogram(position = \"identity\", binwidth = 1,                   alpha = 0.3, colour = NA) +   # One type of theoretical densities for discrete distributions with steps   stat_theodensity(data = ggsubset(type == \"Discrete\"),                    distri = \"nbinom\", geom = \"step\",                    position = position_nudge(x = -0.5)) +   # Another type for the continuous ones with lines   stat_theodensity(data = ggsubset(type == \"Continuous\"),                    distri = \"gamma\") +   scale_colour_discrete(aesthetics = c(\"colour\", \"fill\"), guide = \"none\") +   # Have the facet strips span categories   facet_nested(~ type + distribution, scales = \"free_x\") +   # Precisely control aspect ratio of panels   force_panelsizes(rows = 1.618, cols = 1, respect = TRUE) +   # Tweak the scales of individual panels   facetted_pos_scales(list(     scale_x_continuous(labels = scales::number_format(0.1)),     # Give the 2nd panel minor ticks     scale_x_continuous(guide = guide_axis_minor()),     scale_x_continuous(limits = c(0, 40), oob = scales::oob_keep),     scale_x_continuous(expand = c(1, 0))   )) #> Warning: `ggsubset()` was deprecated in ggh4x 0.2.0. #> This is best replaced by using `data = ~ subset(.x, ...)` instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated."},{"path":"https://teunbrand.github.io/ggh4x/articles/ggh4x.html","id":"further-reading","dir":"Articles","previous_headings":"","what":"Further reading","title":"Introduction to ggh4x","text":"Since ggh4x touches several aspects ggplot2 plots, topics discussed detail vignettes. Please see vignettes facet_* functions, stat_* functions position guides.","code":""},{"path":"https://teunbrand.github.io/ggh4x/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Teun van den Brand. Author, maintainer.","code":""},{"path":"https://teunbrand.github.io/ggh4x/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"van den Brand T (2022). ggh4x: Hacks 'ggplot2'. https://github.com/teunbrand/ggh4x, https://teunbrand.github.io/ggh4x.","code":"@Manual{,   title = {ggh4x: Hacks for 'ggplot2'},   author = {Teun {van den Brand}},   year = {2022},   note = {https://github.com/teunbrand/ggh4x, https://teunbrand.github.io/ggh4x}, }"},{"path":"https://teunbrand.github.io/ggh4x/index.html","id":"ggh4x-","dir":"","previous_headings":"","what":"Hacks for ggplot2","title":"Hacks for ggplot2","text":"ggh4x package ggplot2 extension package. provides utility functions don’t entirely fit within ‘grammar graphics’ concept —can bit hacky— can nonetheless useful tweaking ggplots. Examples include adjusting sizes facets, mapping multiple aesthetics colours specifying individual scales facets. Besides , also small collection geoms, facets, positions, guides stats.","code":""},{"path":"https://teunbrand.github.io/ggh4x/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Hacks for ggplot2","text":"can install recent stable version ggh4x CRAN follows: Alternatively, can install development version GitHub :","code":"install.packages(\"ggh4x\") # install.packages(\"devtools\") devtools::install_github(\"teunbrand/ggh4x\")"},{"path":"https://teunbrand.github.io/ggh4x/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Hacks for ggplot2","text":"topics explored package’s vignettes examples. Links topics . Additional options axis labelling placement extended facets. Nested facets strips can span multiple panels. Custom layouts manual facets. types strips use facets. Adjusting position scales per-panel basis. Varying size panels without limited global aspect.ratio fixed coordinates. recolour axis cut axis line truncated axes. include minor breaks minor tick marks. detail log10 axes logarithmic tickmarks. fine-tune placement labels breaks manual axes. indicate nested relations discrete axes. mirror results hierarchical clustering dendrogram axes help ggdendro package. overlaying theoretical density several distributions, computed fitdistrplus package. draw trend line data rolling kernel. plainly transform x y position group-wise manner. calculate run-length encodings data.","code":""},{"path":"https://teunbrand.github.io/ggh4x/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Hacks for ggplot2","text":"’ll find example illustrates features ggh4x.","code":"library(ggh4x) #> Loading required package: ggplot2 #> Warning: package 'ggplot2' was built under R version 4.1.3 library(scales)  df <- transform(   iris,    Nester = ifelse(Species == \"setosa\", \"Short Leaves\", \"Long Leaves\") )  # Basic plot g <- ggplot(df, aes(Sepal.Width, Sepal.Length)) +   theme_classic() +   theme(strip.background = element_blank())  # For making a plot with multiple colour scales, we'd first need to make layers # with alternative aesthetics. We'll choose a colour scale for every species. # This will produce a few warnings, as ggplot2 doesn't know how to deal with # the alternative aesthetics. g <- g +    geom_point(aes(SW = Sepal.Width),              data = ~ subset(., Species == \"setosa\")) +   geom_point(aes(PL = Petal.Length),              data = ~ subset(., Species == \"versicolor\")) +   geom_point(aes(PW = Petal.Width),              data = ~ subset(., Species == \"virginica\")) #> Warning: Ignoring unknown aesthetics: SW #> Warning: Ignoring unknown aesthetics: PL #> Warning: Ignoring unknown aesthetics: PW  # These alternative aesthetics don't mean a lot until we add a multi-colour # scale to the plot. We need to specify our alternative aesthetics and colours # for every scale. Arguments provided as lists are passed on to individual  # scales. g <- g +   scale_colour_multi(     aesthetics = c(\"SW\", \"PL\", \"PW\"),     name = list(\"Blue\", \"Pink\", \"Orange\"),     colours = list(       brewer_pal(palette = \"YlGnBu\")(6),       brewer_pal(palette = \"RdPu\")(6),       brewer_pal(palette = \"YlOrRd\")(6)     ),     guide = guide_colorbar(barheight = unit(50, \"pt\"))   ) g # We can make a facet wherein duplicated strip labels are merged into one strip g <- g +    facet_nested(~ Nester + Species, scales = \"free\",                nest_line = TRUE)  # Like we did for colours, we might also want to set position scales for every # panel individually. We set these in the same order the facets appear in. position_scales <- list(   scale_x_reverse(guide = \"axis_minor\"),   scale_x_continuous(labels = dollar, guide = \"axis_truncated\"),   scale_x_continuous(breaks = c(3, 4), expand = c(0,0)) )  # Adding the list of scales to the plot g <- g + facetted_pos_scales(x = position_scales)  # Setting the sizes of panels individually size <- 2 / (1 + sqrt(5)) g <- g + force_panelsizes(cols = c(1, size, size ^ 2), respect = TRUE) g"},{"path":"https://teunbrand.github.io/ggh4x/index.html","id":"footnote","dir":"","previous_headings":"","what":"Footnote","title":"Hacks for ggplot2","text":"like mention also packages similar things package . facetscales also facet function wherein scales can set per row/column. egg package can also set panel sizes. lemon package also options tweak position axes. relayer ggnewscale packages also allow multiple colour scales plot. Historically, many functions come ggnomics package, moved package independent Bioconductor infrastructure.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/center_limits.html","id":null,"dir":"Reference","previous_headings":"","what":"Center limits — center_limits","title":"Center limits — center_limits","text":"function factory allows centering scales around certain value still including values. Convenient centering log2 fold change limits around zero.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/center_limits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Center limits — center_limits","text":"","code":"center_limits(around = 0)"},{"path":"https://teunbrand.github.io/ggh4x/reference/center_limits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Center limits — center_limits","text":"around numeric length 1 indicating around value center limits.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/center_limits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Center limits — center_limits","text":"function takes limits returns expanded limits centered around argument.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/center_limits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Center limits — center_limits","text":"","code":"center_limits(5)(c(3,8)) #> [1] 2 8  g <- ggplot(iris,             aes(Sepal.Width, Sepal.Length,                 colour = log2(Petal.Width / Petal.Length))) +   geom_point() +   scale_colour_gradient2(limits = center_limits())"},{"path":"https://teunbrand.github.io/ggh4x/reference/coord_axes_inside.html","id":null,"dir":"Reference","previous_headings":"","what":"Cartesian coordinates with interior axes — coord_axes_inside","title":"Cartesian coordinates with interior axes — coord_axes_inside","text":"coordinate system places plot axes interior positions. , behaves like coord_cartesian() coord_fixed() (latter ratio argument set).","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/coord_axes_inside.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cartesian coordinates with interior axes — coord_axes_inside","text":"","code":"coord_axes_inside(   xlim = NULL,   ylim = NULL,   xintercept = 0,   yintercept = 0,   labels_inside = FALSE,   ratio = NULL,   expand = TRUE,   default = FALSE,   clip = \"on\" )"},{"path":"https://teunbrand.github.io/ggh4x/reference/coord_axes_inside.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cartesian coordinates with interior axes — coord_axes_inside","text":"xlim Limits x y axes. ylim Limits x y axes. xintercept, yintercept numeric(1) positions orthogonal axes placed. outside bounds limits, axes placed nearest extreme. labels_inside logical(1) labels placed inside panel along axes (TRUE) placed outside panel (FALSE, default). ratio Either NULL, numeric(1) fixed aspect ratio, expressed y / x. expand TRUE, default, adds small expansion factor limits ensure data axes overlap. FALSE, limits taken exactly data xlim/ylim. default default coordinate system? FALSE (default), replacing coordinate system another one creates message alerting user coordinate system replaced. TRUE, warning suppressed. clip drawing clipped extent plot panel? setting \"\" (default) means yes, setting \"\" means . cases, default \"\" changed, setting clip = \"\" can cause unexpected results. allows drawing data points anywhere plot, including plot margins. limits set via xlim ylim data points fall outside limits, data points may show places axes, legend, plot title, plot margins.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/coord_axes_inside.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cartesian coordinates with interior axes — coord_axes_inside","text":"CoordAxesInside object, can added plot.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/coord_axes_inside.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cartesian coordinates with interior axes — coord_axes_inside","text":"","code":"# A standard plot p <- ggplot(mpg, aes(scale(displ), scale(hwy))) +   geom_point() +   theme(axis.line = element_line())  # By default, axis text is still placed outside the panel p + coord_axes_inside()   # However, this can simply be changed p + coord_axes_inside(labels_inside = TRUE)   # The place where the axes meet can be changed p + coord_axes_inside(xintercept = 1, yintercept = -1)   # Axes snap to the nearest limit when out-of-bounds p + coord_axes_inside(xintercept = -5, yintercept = Inf, clip = \"off\")   # Can be combined with other non-default axes p + guides(x = \"axis_minor\") +   coord_axes_inside()"},{"path":"https://teunbrand.github.io/ggh4x/reference/distribute_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Element list constructors — distribute_args","title":"Element list constructors — distribute_args","text":"functions take vector arguments pass ith item vector ith call function. elem_list_text elem_list_rect convenience functions constructing lists element_text() element_rect() theme elements.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/distribute_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Element list constructors — distribute_args","text":"","code":"distribute_args(..., .fun = element_text, .cull = TRUE)  elem_list_text(...)  elem_list_rect(...)"},{"path":"https://teunbrand.github.io/ggh4x/reference/distribute_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Element list constructors — distribute_args","text":"... Vectorised arguments pass functions. .fun function distribute arguments . .cull logical(1) determining unknown arguments culled.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/distribute_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Element list constructors — distribute_args","text":"list outputs fun.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/distribute_args.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Element list constructors — distribute_args","text":"NAs NULLs silently dropped. want pass transparent fill colour argument, use verbose character \"transparent\" instead. However, can use NA indicate argument passed function position.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/distribute_args.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Element list constructors — distribute_args","text":"Whereas distribute_args function might seem amenable -label uses elsewhere (besides constructing lists theme elements), intended . example, valid arguments deduced formals function, using certain functions can troublesome. example, distribute_args function properly recognise utility ... argument function supposed distribute arguments . can problem object-oriented functions: methods contain arguments generic , extra arguments silently dropped.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/ggh4x/reference/distribute_args.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Element list constructors — distribute_args","text":"","code":"# Providing arguments for `element_rect()` elem_list_rect(   # The first element_rect will have linetype 1, the second gets 3   linetype = c(1, 3),   # If an argument doesn't exist, it will be silently dropped   nonsense_argument = c(\"I\", \"will\", \"be\", \"filtered\", \"out\") ) #> [[1]] #> List of 5 #>  $ fill         : NULL #>  $ colour       : NULL #>  $ size         : NULL #>  $ linetype     : num 1 #>  $ inherit.blank: logi FALSE #>  - attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\" #>  #> [[2]] #> List of 5 #>  $ fill         : NULL #>  $ colour       : NULL #>  $ size         : NULL #>  $ linetype     : num 3 #>  $ inherit.blank: logi FALSE #>  - attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\" #>   # Providing arguments for `element_text()` elem_list_text(   # `NA`s will be skipped   family = c(\"mono\", NA, \"sans\"),   # Providing a list of more complex arguments. `NULL` will be skipped too.   margin = list(NULL, margin(t = 5)) ) #> [[1]] #> List of 11 #>  $ family       : chr \"mono\" #>  $ face         : NULL #>  $ colour       : NULL #>  $ size         : NULL #>  $ hjust        : NULL #>  $ vjust        : NULL #>  $ angle        : NULL #>  $ lineheight   : NULL #>  $ margin       : NULL #>  $ debug        : NULL #>  $ inherit.blank: logi FALSE #>  - attr(*, \"class\")= chr [1:2] \"element_text\" \"element\" #>  #> [[2]] #> List of 11 #>  $ family       : NULL #>  $ face         : NULL #>  $ colour       : NULL #>  $ size         : NULL #>  $ hjust        : NULL #>  $ vjust        : NULL #>  $ angle        : NULL #>  $ lineheight   : NULL #>  $ margin       : 'margin' num [1:4] 5points 0points 0points 0points #>   ..- attr(*, \"unit\")= int 8 #>  $ debug        : NULL #>  $ inherit.blank: logi FALSE #>  - attr(*, \"class\")= chr [1:2] \"element_text\" \"element\" #>  #> [[3]] #> List of 11 #>  $ family       : chr \"sans\" #>  $ face         : NULL #>  $ colour       : NULL #>  $ size         : NULL #>  $ hjust        : NULL #>  $ vjust        : NULL #>  $ angle        : NULL #>  $ lineheight   : NULL #>  $ margin       : NULL #>  $ debug        : NULL #>  $ inherit.blank: logi FALSE #>  - attr(*, \"class\")= chr [1:2] \"element_text\" \"element\" #>   # Providing arguments to other functions distribute_args(   lineend = c(\"round\", \"butt\", \"square\"),   # If you want to pass a vector instead of a scalar, you can use a list   colour = list(c(\"blue\", \"red\"), \"green\"),   .fun = element_line ) #> [[1]] #> List of 6 #>  $ colour       : chr [1:2] \"blue\" \"red\" #>  $ size         : NULL #>  $ linetype     : NULL #>  $ lineend      : chr \"round\" #>  $ arrow        : logi FALSE #>  $ inherit.blank: logi FALSE #>  - attr(*, \"class\")= chr [1:2] \"element_line\" \"element\" #>  #> [[2]] #> List of 6 #>  $ colour       : chr \"green\" #>  $ size         : NULL #>  $ linetype     : NULL #>  $ lineend      : chr \"butt\" #>  $ arrow        : logi FALSE #>  $ inherit.blank: logi FALSE #>  - attr(*, \"class\")= chr [1:2] \"element_line\" \"element\" #>  #> [[3]] #> List of 6 #>  $ colour       : NULL #>  $ size         : NULL #>  $ linetype     : NULL #>  $ lineend      : chr \"square\" #>  $ arrow        : logi FALSE #>  $ inherit.blank: logi FALSE #>  - attr(*, \"class\")= chr [1:2] \"element_line\" \"element\" #>"},{"path":"https://teunbrand.github.io/ggh4x/reference/element_part_rect.html","id":null,"dir":"Reference","previous_headings":"","what":"Partial rectangle theme element — element_part_rect","title":"Partial rectangle theme element — element_part_rect","text":"element_part_rect() function draws sides rectangle theme elements. can substitute element_rect() theme elements.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/element_part_rect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Partial rectangle theme element — element_part_rect","text":"","code":"element_part_rect(   side = \"tlbr\",   fill = NULL,   colour = NULL,   size = NULL,   linetype = NULL,   color = NULL,   inherit.blank = FALSE )"},{"path":"https://teunbrand.github.io/ggh4x/reference/element_part_rect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Partial rectangle theme element — element_part_rect","text":"side character length one containing \"t\", \"l\", \"b\", \"r\". letters present draw edge top (t), left (l), bottom (b) right (r) respectively. Including none letters default normal element_rect(). fill Fill colour. colour Line/border colour. Color alias colour. size Line/border size mm; text size pts. linetype Line type. integer (0:8), name (blank, solid, dashed, dotted, dotdash, longdash, twodash), string even number (eight) hexadecimal digits give lengths consecutive positions string. color Line/border colour. Color alias colour. inherit.blank element inherit existence element_blank among parents? TRUE existence blank element among parents cause element blank well. FALSE blank parent element ignored calculating final element state.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/element_part_rect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Partial rectangle theme element — element_part_rect","text":"S3 object class element_part_rect.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/element_part_rect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Partial rectangle theme element — element_part_rect","text":"","code":"ggplot(iris, aes(Sepal.Width, Sepal.Length)) +   geom_point() +   facet_grid(Species ~.) +   theme(     strip.background = element_part_rect(side = \"tb\", colour = \"black\"),     panel.background = element_part_rect(side = \"l\", colour = \"black\")   )"},{"path":"https://teunbrand.github.io/ggh4x/reference/facet_grid2.html","id":null,"dir":"Reference","previous_headings":"","what":"Extended grid facets — facet_grid2","title":"Extended grid facets — facet_grid2","text":"function behaves like ggplot2::facet_grid default arguments, extra options. can draw partial full axis guides inner panels, position scales can independent.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/facet_grid2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extended grid facets — facet_grid2","text":"","code":"facet_grid2(   rows = NULL,   cols = NULL,   scales = \"fixed\",   space = \"fixed\",   axes = \"margins\",   remove_labels = \"none\",   independent = \"none\",   shrink = TRUE,   labeller = \"label_value\",   as.table = TRUE,   switch = NULL,   drop = TRUE,   margins = FALSE,   strip = strip_vanilla() )"},{"path":"https://teunbrand.github.io/ggh4x/reference/facet_grid2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extended grid facets — facet_grid2","text":"rows set variables expressions quoted vars() defining faceting groups rows columns dimension. variables can named (names passed labeller). compatibility classic interface, rows can also formula rows (tabular display) LHS columns (tabular display) RHS; dot formula used indicate faceting dimension (either row column). cols set variables expressions quoted vars() defining faceting groups rows columns dimension. variables can named (names passed labeller). compatibility classic interface, rows can also formula rows (tabular display) LHS columns (tabular display) RHS; dot formula used indicate faceting dimension (either row column). scales character(1) logical(1) whether scales shared across facets allowed vary. Interacts independent argument. One following: \"fixed\" FALSE Scales shared across facets (default). \"free_x\" x-scales allowed vary across rows. \"free_y\" y-scales allowed vary across columns. \"free\" TRUE Scales can vary across rows columns. space character(1) logical(1) determining whether size panels proportional length scales. independent argument allows free scales dimension, panel sizes proportional. Note scales argument must free dimension space argument effect.One following: \"fixed\" FALSE panels size (default). \"free_x\" Panel widths proportional x-scales. \"free_y\" Panel heights proportional y-scales. \"free\" TRUE widths heights vary according scales. axes character(1) logical(1) axes drawn. One following: \"margins\" FALSE draw axes outer margins (default). \"x\" Draw axes outer margins inner x-axes . \"y\" Draw axes outer margins inner y-axes . \"\" TRUE Draw axes every panel. remove_labels character(1) logical(1) determining whether axis text displayed inner panels. One following: \"none\" FALSE Display axis text axes (default). \"x\" Display axis text outer margins inner y-axes. \"y\" Display axis text outer margins inner x-axes. \"\" TRUE display axis text outer margins. independent character(1) logical(1) determining whether scales can vary within row column panels, like can ggplot2::facet_wrap. scales argument must free dimension can set independent. One following: \"none\" FALSE y-scales fixed row x-scales fixed column (default). \"x\" x-scales allowed vary within column. \"y\" y-scales allowed vary within row. \"\" TRUE x- y-scales allowed vary within column row respectively. shrink TRUE, shrink scales fit output statistics, raw data. FALSE, range raw data statistical summary. labeller function takes one data frame labels returns list data frame character vectors. input column corresponds one factor. Thus one vars(cyl, ). output column gets displayed one separate line strip label. function inherit \"labeller\" S3 class compatibility labeller(). can use different labeling functions different kind labels, example use label_parsed() formatting facet labels. label_value() used default, check details pointers options. .table TRUE, default, facets laid like table highest values bottom-right. FALSE, facets laid like plot highest value top-right. switch default, labels displayed top right plot. \"x\", top labels displayed bottom. \"y\", right-hand side labels displayed left. Can also set \"\". drop TRUE, default, factor levels used data automatically dropped. FALSE, factor levels shown, regardless whether appear data. margins Either logical value character vector. Margins additional facets contain data possible values faceting variables. FALSE, additional facets included (default). TRUE, margins included faceting variables. specified character vector, names variables margins created. strip object created call strip function, strip_vanilla.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/facet_grid2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extended grid facets — facet_grid2","text":"Facet ggproto object can added plot.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/facet_grid2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extended grid facets — facet_grid2","text":"independent space arguments effect scales argument dimension free. However, independent space arguments can used simultaneously set independent scale panel size proportional scale.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/ggh4x/reference/facet_grid2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extended grid facets — facet_grid2","text":"","code":"p <- ggplot(mpg, aes(displ, hwy)) + geom_point()  # Repeat all axes for every facet p + facet_grid2(cyl ~ drv, axes = \"all\")   # Repeat only y-axes p + facet_grid2(cyl ~  drv, axes = \"y\")   # Repeat axes without x-labels p + facet_grid2(cyl ~ drv, axes = \"all\", remove_labels = \"x\")   # Grid facets with independent axes for every panel p + facet_grid2(cyl ~ drv, scales = \"free\", independent = \"all\")"},{"path":"https://teunbrand.github.io/ggh4x/reference/facet_manual.html","id":null,"dir":"Reference","previous_headings":"","what":"Manual layout for panels — facet_manual","title":"Manual layout for panels — facet_manual","text":"facet_manual() layout panels determined custom design. Inspired base-R graphics layout() function, variant facets offers freedom panels displayed, comes less guarantees looks right.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/facet_manual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manual layout for panels — facet_manual","text":"","code":"facet_manual(   facets,   design = NULL,   widths = NULL,   heights = NULL,   respect = FALSE,   drop = TRUE,   strip.position = \"top\",   scales = \"fixed\",   axes = \"margins\",   remove_labels = \"none\",   labeller = \"label_value\",   trim_blank = TRUE,   strip = strip_vanilla() )"},{"path":"https://teunbrand.github.io/ggh4x/reference/facet_manual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manual layout for panels — facet_manual","text":"facets set variables expressions quoted vars() defining faceting groups rows columns dimension. variables can named (names passed labeller). compatibility classic interface, can also formula character vector. Use either one sided formula, ~+ b, character vector, c(\"\", \"b\"). design Specification panel areas layout. Can either specified character(1) string matrix. See examples. widths, heights numeric unit vector setting sizes panels. numeric vector converted relative \"null\" units. Alternatively, NULL (default), sizes set per instructions coord theme aspect ratio. Note widths heights apply cells panels can drawn. cells, room made fit plot decoration paddings, axes strips. respect logical(1). TRUE, widths heights specified \"null\" units proportional. FALSE, \"null\" units x- y-directions can vary independently. Alternatively, NULL, respect parameter takes instructions coord theme. drop TRUE, default, factor levels used data automatically dropped. FALSE, factor levels shown, regardless whether appear data. strip.position default, labels displayed top plot. Using strip.position possible place labels either four sides setting strip.position = c(\"top\",   \"bottom\", \"left\", \"right\") scales character(1) logical(1) whether scales shared across facets allowed vary. One following: \"fixed\" FALSE Scales shared across facets (default). \"free_x\" x-scales allowed vary. \"free_y\" y-scales allowed vary. \"free\" TRUE scales can vary axes character(1) logical(1) axes drawn. One following: \"margins\" FALSE draw axes outer margins (default). \"x\" Draw axes outer margins inner x-axes . \"y\" Draw axes outer margins inner y-axes . \"\" TRUE Draw axes every panel. remove_labels character(1) logical(1) determining whether axis text displayed inner panels. One following: \"none\" FALSE Display axis text axes (default). \"x\" Display axis text outer margins inner y-axes. \"y\" Display axis text outer margins inner x-axes. \"\" TRUE display axis text outer margins. labeller function takes one data frame labels returns list data frame character vectors. input column corresponds one factor. Thus one vars(cyl, ). output column gets displayed one separate line strip label. function inherit \"labeller\" S3 class compatibility labeller(). can use different labeling functions different kind labels, example use label_parsed() formatting facet labels. label_value() used default, check details pointers options. trim_blank logical(1). TRUE (default), design trimmed remove empty rows columns. strip object created call strip function, strip_vanilla.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/facet_manual.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manual layout for panels — facet_manual","text":"Facet ggproto object can added plot.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/ggh4x/reference/facet_manual.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manual layout for panels — facet_manual","text":"","code":"# A standard plot p <- ggplot(mtcars, aes(mpg, wt)) +   geom_point()  # The `design` argument can be a character string. # New rows are indicated by newline symbol (`\\n`), which are added # automatically for multi-line strings. # The `#`-symbol indicates empty cells. design <- \"  A##  AB#  #BC  ##C \" p + facet_manual(~ cyl, design)   # Alternatively, the `design` argument can be a matrix. # Using `NA`s will leave the cell empty. design <- matrix(c(1,2,3,3), 2, 2, byrow = TRUE) p + facet_manual(~ cyl, design)   # The sizes of columns and rows can be adjusted with the `widths` and # `heights`parameters respectively. p + facet_manual(   ~ cyl, t(design),   widths = c(2, 1), heights = c(2, 1), respect = TRUE )"},{"path":"https://teunbrand.github.io/ggh4x/reference/facet_nested.html","id":null,"dir":"Reference","previous_headings":"","what":"Layout panels in a grid with nested strips — facet_nested","title":"Layout panels in a grid with nested strips — facet_nested","text":"facet_nested() forms matrix panels defined row column faceting variables nests grouped facets.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/facet_nested.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layout panels in a grid with nested strips — facet_nested","text":"","code":"facet_nested(   rows = NULL,   cols = NULL,   scales = \"fixed\",   space = \"fixed\",   axes = \"margins\",   remove_labels = \"none\",   independent = \"none\",   shrink = TRUE,   labeller = \"label_value\",   as.table = TRUE,   switch = NULL,   drop = TRUE,   margins = FALSE,   nest_line = element_blank(),   resect = unit(0, \"mm\"),   strip = strip_nested(),   bleed = NULL )"},{"path":"https://teunbrand.github.io/ggh4x/reference/facet_nested.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layout panels in a grid with nested strips — facet_nested","text":"rows set variables expressions quoted vars() defining faceting groups rows columns dimension. variables can named (names passed labeller). compatibility classic interface, rows can also formula rows (tabular display) LHS columns (tabular display) RHS; dot formula used indicate faceting dimension (either row column). cols set variables expressions quoted vars() defining faceting groups rows columns dimension. variables can named (names passed labeller). compatibility classic interface, rows can also formula rows (tabular display) LHS columns (tabular display) RHS; dot formula used indicate faceting dimension (either row column). scales character(1) logical(1) whether scales shared across facets allowed vary. Interacts independent argument. One following: \"fixed\" FALSE Scales shared across facets (default). \"free_x\" x-scales allowed vary across rows. \"free_y\" y-scales allowed vary across columns. \"free\" TRUE Scales can vary across rows columns. space character(1) logical(1) determining whether size panels proportional length scales. independent argument allows free scales dimension, panel sizes proportional. Note scales argument must free dimension space argument effect.One following: \"fixed\" FALSE panels size (default). \"free_x\" Panel widths proportional x-scales. \"free_y\" Panel heights proportional y-scales. \"free\" TRUE widths heights vary according scales. axes character(1) logical(1) axes drawn. One following: \"margins\" FALSE draw axes outer margins (default). \"x\" Draw axes outer margins inner x-axes . \"y\" Draw axes outer margins inner y-axes . \"\" TRUE Draw axes every panel. remove_labels character(1) logical(1) determining whether axis text displayed inner panels. One following: \"none\" FALSE Display axis text axes (default). \"x\" Display axis text outer margins inner y-axes. \"y\" Display axis text outer margins inner x-axes. \"\" TRUE display axis text outer margins. independent character(1) logical(1) determining whether scales can vary within row column panels, like can ggplot2::facet_wrap. scales argument must free dimension can set independent. One following: \"none\" FALSE y-scales fixed row x-scales fixed column (default). \"x\" x-scales allowed vary within column. \"y\" y-scales allowed vary within row. \"\" TRUE x- y-scales allowed vary within column row respectively. shrink TRUE, shrink scales fit output statistics, raw data. FALSE, range raw data statistical summary. labeller function takes one data frame labels returns list data frame character vectors. input column corresponds one factor. Thus one vars(cyl, ). output column gets displayed one separate line strip label. function inherit \"labeller\" S3 class compatibility labeller(). can use different labeling functions different kind labels, example use label_parsed() formatting facet labels. label_value() used default, check details pointers options. .table TRUE, default, facets laid like table highest values bottom-right. FALSE, facets laid like plot highest value top-right. switch default, labels displayed top right plot. \"x\", top labels displayed bottom. \"y\", right-hand side labels displayed left. Can also set \"\". drop TRUE, default, factor levels used data automatically dropped. FALSE, factor levels shown, regardless whether appear data. margins Either logical value character vector. Margins additional facets contain data possible values faceting variables. FALSE, additional facets included (default). TRUE, margins included faceting variables. specified character vector, names variables margins created. nest_line theme element, either element_blank() inheriting ggplot2::element_line(). element inherits ggh4x.facet.nestline element theme. resect unit vector length 1, indicating much nesting line shortened. strip object created call strip function, strip_nested(). bleed bleed argument moved strip_nested() function.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/facet_nested.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Layout panels in a grid with nested strips — facet_nested","text":"FacetNested ggproto object can added plot.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/facet_nested.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Layout panels in a grid with nested strips — facet_nested","text":"function inherits capabilities facet_grid2(). Unlike facet_grid(), function automatically expands missing variables variables direction, allow unnested variables. still requires least one layer faceting variables. Hierarchies inferred order variables supplied rows cols. first variable interpreted outermost variable, last variable interpreted innermost variable. display order always outermost variable placed furthest away panels. information nesting strips, please visit documentation strip_nested().","code":""},{"path":[]},{"path":"https://teunbrand.github.io/ggh4x/reference/facet_nested.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Layout panels in a grid with nested strips — facet_nested","text":"","code":"# A standard plot p <- ggplot(mtcars, aes(mpg, wt)) +   geom_point()  # Similar to `facet_grid2(..., strip = strip_nested())` p + facet_nested(~ vs + cyl)   # The nest line inherits from the global theme p + facet_nested(~ cyl + vs, nest_line = element_line(colour = \"red\")) +   theme(ggh4x.facet.nestline = element_line(linetype = 3))"},{"path":"https://teunbrand.github.io/ggh4x/reference/facet_nested_wrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Ribbon of panels with nested strips. — facet_nested_wrap","title":"Ribbon of panels with nested strips. — facet_nested_wrap","text":"facet_nested_wrap() wraps sequence panels onto two-dimensional layout, nests grouped facets possible.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/facet_nested_wrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ribbon of panels with nested strips. — facet_nested_wrap","text":"","code":"facet_nested_wrap(   facets,   nrow = NULL,   ncol = NULL,   scales = \"fixed\",   axes = \"margins\",   remove_labels = \"none\",   shrink = TRUE,   labeller = \"label_value\",   as.table = TRUE,   drop = TRUE,   dir = \"h\",   strip.position = \"top\",   nest_line = element_blank(),   resect = unit(0, \"mm\"),   trim_blank = TRUE,   strip = strip_nested(),   bleed = NULL )"},{"path":"https://teunbrand.github.io/ggh4x/reference/facet_nested_wrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ribbon of panels with nested strips. — facet_nested_wrap","text":"facets set variables expressions quoted vars() defining faceting groups rows columns dimension. variables can named (names passed labeller). compatibility classic interface, can also formula character vector. Use either one sided formula, ~+ b, character vector, c(\"\", \"b\"). nrow Number rows columns. ncol Number rows columns. scales character(1) logical(1) whether scales shared across facets allowed vary. One following: \"fixed\" FALSE Scales shared across facets (default). \"free_x\" x-scales allowed vary. \"free_y\" y-scales allowed vary. \"free\" TRUE scales can vary axes character(1) logical(1) axes drawn. One following: \"margins\" FALSE draw axes outer margins (default). \"x\" Draw axes outer margins inner x-axes . \"y\" Draw axes outer margins inner y-axes . \"\" TRUE Draw axes every panel. remove_labels character(1) logical(1) determining whether axis text displayed inner panels. One following: \"none\" FALSE Display axis text axes (default). \"x\" Display axis text outer margins inner y-axes. \"y\" Display axis text outer margins inner x-axes. \"\" TRUE display axis text outer margins. shrink TRUE, shrink scales fit output statistics, raw data. FALSE, range raw data statistical summary. labeller function takes one data frame labels returns list data frame character vectors. input column corresponds one factor. Thus one vars(cyl, ). output column gets displayed one separate line strip label. function inherit \"labeller\" S3 class compatibility labeller(). can use different labeling functions different kind labels, example use label_parsed() formatting facet labels. label_value() used default, check details pointers options. .table TRUE, default, facets laid like table highest values bottom-right. FALSE, facets laid like plot highest value top-right. drop TRUE, default, factor levels used data automatically dropped. FALSE, factor levels shown, regardless whether appear data. dir Direction: either \"h\" horizontal, default, \"v\", vertical. strip.position default, labels displayed top plot. Using strip.position possible place labels either four sides setting strip.position = c(\"top\",   \"bottom\", \"left\", \"right\") nest_line theme element, either element_blank() inheriting ggplot2::element_line(). element inherits ggh4x.facet.nestline element theme. resect unit vector length 1, indicating much nesting line shortened. trim_blank logical(1). TRUE (default), draw rows columns containing panels. FALSE, nrow ncol arguments taken literally, even needed fit panels. strip object created call strip function, strip_nested(). bleed bleed argument moved strip_nested() function.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/facet_nested_wrap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ribbon of panels with nested strips. — facet_nested_wrap","text":"FacetNestedWrap ggproto object can added plot.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/facet_nested_wrap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ribbon of panels with nested strips. — facet_nested_wrap","text":"function inherits capabilities facet_wrap2(). function merges strips row column appear regular facet_wrap() layout behaviour. Hierarchies inferred order variables supplied facets. first variable interpreted outermost variable, last variable interpreted innermost variable. display order always outermost variable placed furthest away panels. information nesting strips, please visit documentation strip_nested().","code":""},{"path":[]},{"path":"https://teunbrand.github.io/ggh4x/reference/facet_nested_wrap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ribbon of panels with nested strips. — facet_nested_wrap","text":"","code":"# A standard plot p <- ggplot(mpg, aes(displ, hwy)) +   geom_point()  # Similar to `facet_wrap2(..., strip = strip_nested())`. p + facet_nested_wrap(vars(cyl, drv))   # A nest line inherits from the global theme p + facet_nested_wrap(vars(cyl, drv),                       nest_line = element_line(colour = \"red\")) +   theme(ggh4x.facet.nestline = element_line(linetype = 3))"},{"path":"https://teunbrand.github.io/ggh4x/reference/facet_wrap2.html","id":null,"dir":"Reference","previous_headings":"","what":"Extended wrapped facets — facet_wrap2","title":"Extended wrapped facets — facet_wrap2","text":"function behaves like ggplot2::facet_wrap(), extra options axis drawing scales fixed.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/facet_wrap2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extended wrapped facets — facet_wrap2","text":"","code":"facet_wrap2(   facets,   nrow = NULL,   ncol = NULL,   scales = \"fixed\",   axes = \"margins\",   remove_labels = \"none\",   shrink = TRUE,   labeller = \"label_value\",   as.table = TRUE,   drop = TRUE,   dir = \"h\",   strip.position = \"top\",   trim_blank = TRUE,   strip = strip_vanilla() )"},{"path":"https://teunbrand.github.io/ggh4x/reference/facet_wrap2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extended wrapped facets — facet_wrap2","text":"facets set variables expressions quoted vars() defining faceting groups rows columns dimension. variables can named (names passed labeller). compatibility classic interface, can also formula character vector. Use either one sided formula, ~+ b, character vector, c(\"\", \"b\"). nrow Number rows columns. ncol Number rows columns. scales character(1) logical(1) whether scales shared across facets allowed vary. One following: \"fixed\" FALSE Scales shared across facets (default). \"free_x\" x-scales allowed vary. \"free_y\" y-scales allowed vary. \"free\" TRUE scales can vary axes character(1) logical(1) axes drawn. One following: \"margins\" FALSE draw axes outer margins (default). \"x\" Draw axes outer margins inner x-axes . \"y\" Draw axes outer margins inner y-axes . \"\" TRUE Draw axes every panel. remove_labels character(1) logical(1) determining whether axis text displayed inner panels. One following: \"none\" FALSE Display axis text axes (default). \"x\" Display axis text outer margins inner y-axes. \"y\" Display axis text outer margins inner x-axes. \"\" TRUE display axis text outer margins. shrink TRUE, shrink scales fit output statistics, raw data. FALSE, range raw data statistical summary. labeller function takes one data frame labels returns list data frame character vectors. input column corresponds one factor. Thus one vars(cyl, ). output column gets displayed one separate line strip label. function inherit \"labeller\" S3 class compatibility labeller(). can use different labeling functions different kind labels, example use label_parsed() formatting facet labels. label_value() used default, check details pointers options. .table TRUE, default, facets laid like table highest values bottom-right. FALSE, facets laid like plot highest value top-right. drop TRUE, default, factor levels used data automatically dropped. FALSE, factor levels shown, regardless whether appear data. dir Direction: either \"h\" horizontal, default, \"v\", vertical. strip.position default, labels displayed top plot. Using strip.position possible place labels either four sides setting strip.position = c(\"top\",   \"bottom\", \"left\", \"right\") trim_blank logical(1). TRUE (default), draw rows columns containing panels. FALSE, nrow ncol arguments taken literally, even needed fit panels. strip object created call strip function, strip_vanilla.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/facet_wrap2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extended wrapped facets — facet_wrap2","text":"Facet ggproto object can added plot.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/ggh4x/reference/facet_wrap2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extended wrapped facets — facet_wrap2","text":"","code":"p <- ggplot(mpg, aes(displ, hwy)) + geom_point()  # Repeat all axes for every facet p + facet_wrap2(vars(class), axes = \"all\")   # Repeat only y-axes p + facet_wrap2(vars(class), axes = \"y\")   # Repeat axes without labels p + facet_wrap2(vars(class), axes = \"all\", remove_labels = \"all\")   # Repeat axes without x-axis labels p + facet_wrap2(vars(class), axes = \"all\", remove_labels = \"x\")"},{"path":"https://teunbrand.github.io/ggh4x/reference/facetted_pos_scales.html","id":null,"dir":"Reference","previous_headings":"","what":"Set individual scales in facets — facetted_pos_scales","title":"Set individual scales in facets — facetted_pos_scales","text":"function allows tweaking position scales (x y) individual facets. can use fine-tune limits, breaks scale parameters individual facets, provided facet allows free scales.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/facetted_pos_scales.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set individual scales in facets — facetted_pos_scales","text":"","code":"facetted_pos_scales(x = NULL, y = NULL)"},{"path":"https://teunbrand.github.io/ggh4x/reference/facetted_pos_scales.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set individual scales in facets — facetted_pos_scales","text":"x, y list wherein elements either x/y position scales NULLs. Alternatively, list formulae (see details).","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/facetted_pos_scales.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set individual scales in facets — facetted_pos_scales","text":"facetted_pos_scales object, instructing ggplot adjust scales per facet.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/facetted_pos_scales.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set individual scales in facets — facetted_pos_scales","text":"intended function works ggplot2::facet_wrap() ggplot2::facet_grid(). facet_wrap, scales used individual panel. facet_grid, scales used rows columns. Note facets must used scales = \"free\" \"free_x\" \"free_y\", depending scales added. Axis titles derived first scale list (default position scale first list element NULL).","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/facetted_pos_scales.html","id":"scale-transformations","dir":"Reference","previous_headings":"","what":"Scale transformations","title":"Set individual scales in facets — facetted_pos_scales","text":"allowed use individual scale transformations facets, functionality comes trade-bounds (oob) argument individual scales ignored. Values bounds clipped. Whereas stat part ggplot layer typically calculated scale transformations, calculation stat happens scale transformation function, can lead awkward results. suggested workaround pre-transform data layers non-identity stat parts.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/facetted_pos_scales.html","id":"scale-list-input","dir":"Reference","previous_headings":"","what":"Scale list input","title":"Set individual scales in facets — facetted_pos_scales","text":"NULLs valid list elements signal default position scale used position list NULL occurs. Since transformations applied facet scales initiated, recommended use default position (either first list, defined outside facetted_pos_scales()) scale transformation trans = \"identity\" (default).","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/facetted_pos_scales.html","id":"formula-list-input","dir":"Reference","previous_headings":"","what":"Formula list input","title":"Set individual scales in facets — facetted_pos_scales","text":"x y arguments also accept list two-sided formulas. left hand side formula evaluate logical vector. right hand side formula evaluate position scale, wherein x argument accepts x-position scales y argument accepts y-position scales. Notably, left hand side formula evaluated using tidy evaluation framework, whereby data.frame plot's layout given priority environment formula created. consequence, variables (columns) define faceting groups can references directly.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/ggh4x/reference/facetted_pos_scales.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set individual scales in facets — facetted_pos_scales","text":"","code":"plot <- ggplot(iris, aes(Sepal.Width, Sepal.Length)) +   geom_point(aes(colour = Species)) +   facet_wrap(Species ~ ., scales = \"free_y\")  # Reversing the y-axis in the second panel. When providing a list of scales, # NULL indicates to use the default, global scale plot +   facetted_pos_scales(     y = list(NULL, scale_y_continuous(trans = \"reverse\"))   )   # Alternative for specifying scales with formula lists. The LHS can access # columns in the plot's layout. plot +   facetted_pos_scales(     y = list(       Species == \"virginica\" ~ scale_y_continuous(breaks = c(6, 7)),       Species == \"versicolor\" ~ scale_y_reverse()     )   )"},{"path":"https://teunbrand.github.io/ggh4x/reference/force_panelsizes.html","id":null,"dir":"Reference","previous_headings":"","what":"Force a facetted plot to have specified panel sizes — force_panelsizes","title":"Force a facetted plot to have specified panel sizes — force_panelsizes","text":"Takes ggplot modifies facet drawing behaviour widths heights panels set user.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/force_panelsizes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Force a facetted plot to have specified panel sizes — force_panelsizes","text":"","code":"force_panelsizes(rows = NULL, cols = NULL, respect = NULL)"},{"path":"https://teunbrand.github.io/ggh4x/reference/force_panelsizes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Force a facetted plot to have specified panel sizes — force_panelsizes","text":"rows numeric unit vector setting panel heights. cols numeric unit vector setting panel widths. respect logical value. TRUE, widths heights specified \"null\" units proportional. FALSE, \"null\" units x- y-direction vary independently.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/force_panelsizes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Force a facetted plot to have specified panel sizes — force_panelsizes","text":"forcedsize S3 object can added plot.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/force_panelsizes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Force a facetted plot to have specified panel sizes — force_panelsizes","text":"Forcing panel sizes theory work regardless facetting choice made, long function called facet specification. Even facets specified, ggplot2 defaults ggplot2::facet_null() specification; single panel. force_panelsizes works wrapping original panel drawing function inside function modifies widths heights panel grobs original function's output gtable. rows cols numeric vectors, panel sizes defined ratios .e. relative \"null\" units. rows cols vectors repeated shortened fit number panels direction. rows cols NULL, changes made direction. respect = NULL, default behaviour specified elsewhere inherited. attempt made guarantee plot fits output device. space argument ggplot2::facet_grid() overruled. individual panels span multiple rows columns, function may work intended.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/ggh4x/reference/force_panelsizes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Force a facetted plot to have specified panel sizes — force_panelsizes","text":"","code":"ggplot(mtcars, aes(disp, mpg)) +   geom_point() +   facet_grid(vs ~ am) +   force_panelsizes(rows = c(2, 1),                    cols = c(2, 1))"},{"path":"https://teunbrand.github.io/ggh4x/reference/geom_outline_point.html","id":null,"dir":"Reference","previous_headings":"","what":"Points with outline — geom_outline_point","title":"Points with outline — geom_outline_point","text":"variant point geom, wherein overlapping points given shared outline. works drawing additional layer points regular layer points thicker stroke.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/geom_outline_point.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Points with outline — geom_outline_point","text":"","code":"geom_outline_point(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://teunbrand.github.io/ggh4x/reference/geom_outline_point.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Points with outline — geom_outline_point","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/geom_outline_point.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Points with outline — geom_outline_point","text":"ggplot Layer","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/geom_outline_point.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Points with outline — geom_outline_point","text":"Due way geom implemented, handles alpha aesthetic pretty ungracefully.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/geom_outline_point.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Points with outline — geom_outline_point","text":"geom_outline_point() understands following aesthetics (required aesthetics bold): x y alpha colour fill group shape size stroke stroke_colour Learn setting aesthetics vignette(\"ggplot2-specs\").","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/geom_outline_point.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Points with outline — geom_outline_point","text":"","code":"# A standard plot p <- ggplot(mpg, aes(displ, cty, colour = factor(cyl))) +   geom_outline_point(size = 10, stroke = 3) p   # The colour of the stroke can be mapped to a scale by setting the # aesthetics to `\"stroke_colour\"`. p +   aes(stroke_colour = factor(cyl)) +   scale_colour_hue(     aesthetics = \"stroke_colour\",     l = 50   )"},{"path":"https://teunbrand.github.io/ggh4x/reference/geom_pointpath.html","id":null,"dir":"Reference","previous_headings":"","what":"Point Paths — geom_pointpath","title":"Point Paths — geom_pointpath","text":"point path geom used make scatterplot wherein points connected lines order. geom intends mimic type = 'b' style base R line plots.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/geom_pointpath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Point Paths — geom_pointpath","text":"","code":"geom_pointpath(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = NA,   arrow = NULL,   inherit.aes = TRUE )"},{"path":"https://teunbrand.github.io/ggh4x/reference/geom_pointpath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Point Paths — geom_pointpath","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. arrow Arrow specification created grid::arrow(). inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/geom_pointpath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Point Paths — geom_pointpath","text":"Layer ggproto object.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/geom_pointpath.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Point Paths — geom_pointpath","text":"linesize aesthetic can interpreted size aesthetic geom_line(). mult numeric value scale proportion gaps line around points. need geom apparent, since can approximated variety ways, trick sleeve dynamically adapts inter-point segments  deform different aspect ratios device sizes.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/geom_pointpath.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Point Paths — geom_pointpath","text":"geom_pointpath() understands following aesthetics (required aesthetics bold): y alpha colour group shape size stroke linesize linetype mult","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/geom_pointpath.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Point Paths — geom_pointpath","text":"","code":"ggplot(pressure, aes(temperature, pressure)) +   geom_pointpath()"},{"path":"https://teunbrand.github.io/ggh4x/reference/geom_polygonraster.html","id":null,"dir":"Reference","previous_headings":"","what":"Polygon parameterisation for rasters — geom_polygonraster","title":"Polygon parameterisation for rasters — geom_polygonraster","text":"geom_polygonraster takes data describes raster pixels size reparametrises data polygon. allows flexible transformations data, comes efficiency cost.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/geom_polygonraster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Polygon parameterisation for rasters — geom_polygonraster","text":"","code":"geom_polygonraster(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = position_lineartrans(),   ...,   hjust = 0.5,   vjust = 0.5,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://teunbrand.github.io/ggh4x/reference/geom_polygonraster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Polygon parameterisation for rasters — geom_polygonraster","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. hjust horizontal vertical justification grob.  justification value number 0 1.  Defaults 0.5 , centering pixel data location. vjust horizontal vertical justification grob.  justification value number 0 1.  Defaults 0.5 , centering pixel data location. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/geom_polygonraster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Polygon parameterisation for rasters — geom_polygonraster","text":"Layer ggproto object.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/geom_polygonraster.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Polygon parameterisation for rasters — geom_polygonraster","text":"pixel raster, makes vertex four corner points. coordinates can transformed coord-functions ggplot2::coord_polar() position-functions position_lineartrans(). Currently substitutes group aesthetics right drawing favour pixel identifiers.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/geom_polygonraster.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Polygon parameterisation for rasters — geom_polygonraster","text":"geom_raster() understands following aesthetics (required aesthetics bold): x y fill alpha group","code":""},{"path":[]},{"path":"https://teunbrand.github.io/ggh4x/reference/geom_polygonraster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Polygon parameterisation for rasters — geom_polygonraster","text":"","code":"# Combining with coord_polar() ggplot(faithfuld, aes(waiting, eruptions)) +   geom_polygonraster(aes(fill = density)) +   coord_polar()   # Combining with linear transformations df <- data.frame(x = row(volcano)[TRUE],                  y = col(volcano)[TRUE],                  z = volcano[TRUE])  ggplot(df, aes(x, y, fill = z)) +   geom_polygonraster(position = position_lineartrans(angle = 30,                                                      shear = c(1, 0)))"},{"path":"https://teunbrand.github.io/ggh4x/reference/geom_rectmargin.html","id":null,"dir":"Reference","previous_headings":"","what":"Rectangular rugs in the margins — geom_rectmargin","title":"Rectangular rugs in the margins — geom_rectmargin","text":"Like rug plots display data points 2D plot lines margins, function plots rectangles margins. Rectangular rugs convenient displaying one-dimensional, ranged annotations two-dimensional plots.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/geom_rectmargin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rectangular rugs in the margins — geom_rectmargin","text":"","code":"geom_rectmargin(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   outside = FALSE,   sides = \"bl\",   length = unit(0.03, \"npc\"),   linejoin = \"mitre\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  geom_tilemargin(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   outside = FALSE,   sides = \"bl\",   length = unit(0.03, \"npc\"),   linejoin = \"mitre\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://teunbrand.github.io/ggh4x/reference/geom_rectmargin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rectangular rugs in the margins — geom_rectmargin","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. outside logical length 1 controls whether move rectangles outside plot area. best results, probably best set coord_cartesian(clip = \"\") avoid overlap default axes changing sides argument \"tr\". sides string length 1 controls sides plot rug-rectangles appear . string containing letters \"trbl\" set top, right, bottom left respectively. length grid::unit() object sets width height rectangles x- y-directions respectively. Note scale expansion can affect look . linejoin Line join style (round, mitre, bevel). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/geom_rectmargin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rectangular rugs in the margins — geom_rectmargin","text":"Layer ggproto object.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/geom_rectmargin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rectangular rugs in the margins — geom_rectmargin","text":"default, scales expanded 5\\ whereas rug rectangles occupy 3\\ default. geom_rectmargin() geom_tilemargin() versions thing, parametrised differently; see geom_rect(). functions hard-coded required aesthetics, since x y directions can omitted choosing side corresponding direction, .e. y-direction variables omitted plotting rug top /bottom. can result errors aesthetics specified appropriately, caution advised.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/geom_rectmargin.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Rectangular rugs in the margins — geom_rectmargin","text":"geom_rectmargin() requires either one following sets aesthetics, also can use : xmin xmax /: ymin ymax geom_tilemargin() requires either one following sets aesthetics, can also use : x width /: y height Furthermore, geom_rectmargin() geom_tilemargin() also understand shared aesthetics: alpha colour fill group linetype size","code":""},{"path":[]},{"path":"https://teunbrand.github.io/ggh4x/reference/geom_rectmargin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rectangular rugs in the margins — geom_rectmargin","text":"","code":"# geom_rectmargin() is parameterised by the four corners df <- data.frame(   xmin = c(1, 5),   xmax = c(2, 7),   ymin = c(1, 2),   ymax = c(2, 4),   fill = c(\"A\", \"B\") )   ggplot(df, aes(xmin = xmin, xmax = xmax,                ymin = ymin, ymax = ymax,                fill = fill)) +   geom_rect() +   geom_rectmargin()   # geom_tilemargin() is parameterised by center and size df <- data.frame(   x = c(1, 4),   y = c(1, 2),   width = c(2, 1),   height = c(1, 2),   fill = c(\"A\", \"B\") )  ggplot(df, aes(x, y,                width = width, height = height,                fill = fill)) +   geom_tile() +   geom_tilemargin()"},{"path":"https://teunbrand.github.io/ggh4x/reference/geom_text_aimed.html","id":null,"dir":"Reference","previous_headings":"","what":"Aimed text — geom_text_aimed","title":"Aimed text — geom_text_aimed","text":"Similar geom_text(), geom also generates text places text angle text seems aimed towards point defined [xend, yend].","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/geom_text_aimed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aimed text — geom_text_aimed","text":"","code":"geom_text_aimed(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   parse = FALSE,   nudge_x = 0,   nudge_y = 0,   flip_upsidedown = TRUE,   check_overlap = FALSE,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://teunbrand.github.io/ggh4x/reference/geom_text_aimed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aimed text — geom_text_aimed","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. jointy specified nudge_x nudge_y. ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. parse TRUE, labels parsed expressions displayed described ?plotmath. nudge_x Horizontal vertical adjustment nudge labels . Useful offsetting text points, particularly discrete scales. jointly specified position. nudge_y Horizontal vertical adjustment nudge labels . Useful offsetting text points, particularly discrete scales. jointly specified position. flip_upsidedown logical(1). TRUE (default), angle text placed angles 90 270 degrees flipped comfortable read. FALSE, take calculated angles literally. check_overlap TRUE, text overlaps previous text layer plotted. check_overlap happens draw time order data. Therefore data arranged label column calling geom_text(). Note argument supported geom_label(). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/geom_text_aimed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aimed text — geom_text_aimed","text":"ggplot2 Layer","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/geom_text_aimed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aimed text — geom_text_aimed","text":"calculated angle text parallel line passing coordinates [x, y] [xend, yend]. calculated angle added angle angle aesthetic, can set text perpendicular line setting angle = 90. angles calculated absolute coordinates, meaning resizing plot retain appearance.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/geom_text_aimed.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Aimed text — geom_text_aimed","text":"using geom aim text centre polar plot, make sure radius range close zero width.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/geom_text_aimed.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Aimed text — geom_text_aimed","text":"geom_text_aimed() understands following aesthetics (required aesthetics bold): x y label alpha angle colour family fontface group hjust lineheight size vjust xend yend Learn setting aesthetics vignette(\"ggplot2-specs\").","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/geom_text_aimed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aimed text — geom_text_aimed","text":"","code":"# Point all labels to upper right corner ggplot(mtcars, aes(mpg, wt)) +   geom_text_aimed(aes(label = rownames(mtcars)),                   xend = Inf, yend = Inf)   # Point all labels to center of polar plot ggplot(mpg, aes(manufacturer)) +   geom_bar(width = 1, aes(fill = manufacturer), show.legend = FALSE) +   geom_text_aimed(aes(label = manufacturer), hjust = 0,                   stat = \"count\", nudge_y = 2) +   scale_x_discrete(labels = NULL) +   coord_polar()"},{"path":"https://teunbrand.github.io/ggh4x/reference/ggh4x-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ggh4x: Hacks for 'ggplot2' — ggh4x-package","title":"ggh4x: Hacks for 'ggplot2' — ggh4x-package","text":"'ggplot2' extension variety little helpful things. package extends 'ggplot2' facets customisation, setting individual scales per panel, resizing panels providing nested facets. Also allows multiple colour fill scales per plot. Also hosts smaller collection stats, geoms axis guides.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/ggh4x/reference/ggh4x-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ggh4x: Hacks for 'ggplot2' — ggh4x-package","text":"Maintainer: Teun van den Brand tahvdbrand@gmail.com (ORCID)","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/ggh4x_extensions.html","id":null,"dir":"Reference","previous_headings":"","what":"ggh4x extensions to ggplot2 — ggh4x_extensions","title":"ggh4x extensions to ggplot2 — ggh4x_extensions","text":"ggh4x relies extension mechanism ggplot2 ggproto class objects, allows cross-package inheritance objects geoms, stats, facets, scales coordinate systems. objects can ignored users purpose making plots, since interacting objects preferred various geom_, stat_, facet_, coord_ scale_ functions.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/ggh4x/reference/ggsubset.html","id":null,"dir":"Reference","previous_headings":"","what":"Passing a subset of data to ggplot2 layers. — ggsubset","title":"Passing a subset of data to ggplot2 layers. — ggsubset","text":"convenience function allow layer objects, geoms, take subset data main ggplot() call, without storing duplicate subset ggplot object.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/ggsubset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Passing a subset of data to ggplot2 layers. — ggsubset","text":"","code":"ggsubset(rowtest = NULL, omit = NULL)"},{"path":"https://teunbrand.github.io/ggh4x/reference/ggsubset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Passing a subset of data to ggplot2 layers. — ggsubset","text":"rowtest logical expression indicating rows keep. omit character column name exclude.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/ggsubset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Passing a subset of data to ggplot2 layers. — ggsubset","text":"function takes data.frame argument returns subset data.frame according rowtest","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/ggsubset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Passing a subset of data to ggplot2 layers. — ggsubset","text":"ggsubset wrapper around subset.data.frame subset argument set rowtest select argument -omit. Since data argument layer() function can take function one argument, can pass function returned ggsubset argument subset data rows.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/ggh4x/reference/ggsubset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Passing a subset of data to ggplot2 layers. — ggsubset","text":"","code":"ggplot(iris, aes(Sepal.Width, Sepal.Length)) +   geom_point(data = ggsubset(Species == \"setosa\")) #> Warning: `ggsubset()` was deprecated in ggh4x 0.2.0. #> This is best replaced by using `data = ~ subset(.x, ...)` instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated."},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_axis_logticks.html","id":null,"dir":"Reference","previous_headings":"","what":"Axis guide with ticks for logarithmic breaks — guide_axis_logticks","title":"Axis guide with ticks for logarithmic breaks — guide_axis_logticks","text":"axis guide probably best described ggplot2::annotation_logticks() implemented guide instead geom. tick marks probably best suit log10 transformations.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_axis_logticks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axis guide with ticks for logarithmic breaks — guide_axis_logticks","text":"","code":"guide_axis_logticks(   title = waiver(),   check.overlap = FALSE,   angle = NULL,   n.dodge = 1,   order = 0,   position = waiver(),   prescaled = FALSE,   trunc_lower = NULL,   trunc_upper = NULL,   colour = NULL,   color = NULL,   base = waiver() )"},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_axis_logticks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axis guide with ticks for logarithmic breaks — guide_axis_logticks","text":"title character string expression indicating title guide. NULL, title shown. default (waiver()), name scale object name specified labs() used title. check.overlap silently remove overlapping labels, (recursively) prioritizing first, last, middle labels. angle Compared setting angle theme() / element_text(), also uses heuristics automatically pick hjust vjust probably want. n.dodge number rows (vertical axes) columns (horizontal axes) used render labels. useful displaying labels otherwise overlap. order Used determine order guides (left--right, top--bottom), one  guide must drawn location. position guide drawn: one top, bottom, left, right. prescaled logical length one, indicating whether data manually rescaled (TRUE) scale takes care transformation (FALSE). trunc_lower lower upper range truncated axis: NULL perform truncation. function takes break positions input returns lower upper boundary. Note also discrete scales, positions mapped positions numeric. numeric value data units lower upper boundaries. unit object. trunc_upper lower upper range truncated axis: NULL perform truncation. function takes break positions input returns lower upper boundary. Note also discrete scales, positions mapped positions numeric. numeric value data units lower upper boundaries. unit object. colour character(1) valid colour colouring axis text, axis ticks axis line. Overrules colour assigned theme. color character(1) valid colour colouring axis text, axis ticks axis line. Overrules colour assigned theme. base provided, guide takes base log transformation instead trying guess base. recommended use argument base 10.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_axis_logticks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axis guide with ticks for logarithmic breaks — guide_axis_logticks","text":"axis_logticks guide class object.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_axis_logticks.html","id":"theme-elements","dir":"Reference","previous_headings":"","what":"Theme elements","title":"Axis guide with ticks for logarithmic breaks — guide_axis_logticks","text":"axis guide uses following theme elements: ggh4x.axis.ticks.length.minor rel() object set size minor ticks relative length major ticks (axis.ticks.length). Defaults rel(2/3). ggh4x.axis.ticks.length.mini rel() object set size smallest ticks, also relative length major ticks (axis.ticks.length). Defaults rel(1/3).","code":""},{"path":[]},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_axis_logticks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axis guide with ticks for logarithmic breaks — guide_axis_logticks","text":"","code":"# The guide works well out of the box with log10 scales p <- ggplot(pressure, aes(temperature, pressure)) +   geom_line() p + scale_y_log10(guide = \"axis_logticks\")   # If the data is already transformed, you can set 'prescaled' to TRUE ggplot(pressure, aes(temperature, log10(pressure))) +   geom_line() +   guides(y = guide_axis_logticks(prescaled = TRUE))   # The lenghts of the log-ticks are controlled by the theme relative to the # major ticks. p + scale_y_log10(guide = \"axis_logticks\") +   theme(     axis.ticks.length.y = unit(1, \"cm\"),     ggh4x.axis.ticks.length.minor = rel(0.55),     ggh4x.axis.ticks.length.mini = rel(0.1)   )"},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_axis_manual.html","id":null,"dir":"Reference","previous_headings":"","what":"Manual axis — guide_axis_manual","title":"Manual axis — guide_axis_manual","text":"axis allows greater degree control default axes guides. particular, axis allows setting break positions labels independently scale bound constraints secondary axes. Additionally, label attributes may set parallel labels , circumventing unsupported vectorised input element_text().","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_axis_manual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manual axis — guide_axis_manual","text":"","code":"guide_axis_manual(   title = waiver(),   breaks = waiver(),   labels = waiver(),   label_family = NULL,   label_face = NULL,   label_colour = NULL,   label_size = NULL,   label_hjust = NULL,   label_vjust = NULL,   label_lineheight = NULL,   label_color = NULL,   label_margin = NULL,   check.overlap = FALSE,   angle = NULL,   n.dodge = 1,   order = 0,   colour = NULL,   color = NULL,   trunc_lower = NULL,   trunc_upper = NULL,   position = waiver() )"},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_axis_manual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manual axis — guide_axis_manual","text":"title character string expression indicating title guide. NULL, title shown. default (waiver()), name scale object name specified labs() used title. breaks One following ways parametrise tick label positions: NULL draw ticks labels. waiver() default breaks computed scale (default). numeric vector continuous discrete scales, character vector discrete scales. function takes limits input returns breaks output. Also accepts rlang lambda notation. unit vector setting data-independent breaks. labels One following ways dictate labels: NULL draw labels. waiver() default labels computed scale breaks (default). Note scale non-identity transformation unlikely graciously handle breaks defined grid-units. character vector giving function takes breaks input returns labels output. Also accepts rlang lambda notation. label_family, label_face, label_colour, label_size, label_hjust, label_vjust, label_lineheight, label_color, label_margin Arguments passed label constructor. See element_text() arguments, arguments mirror label_-prefix. exception label_margin, label_* arguments assumed parallel (result ) labels argument recycled rep_len() necessary. default, parameters taken theme. check.overlap silently remove overlapping labels, (recursively) prioritizing first, last, middle labels. angle Compared setting angle theme() / element_text(), also uses heuristics automatically pick hjust vjust probably want. n.dodge number rows (vertical axes) columns (horizontal axes) used render labels. useful displaying labels otherwise overlap. order Used determine order guides (left--right, top--bottom), one  guide must drawn location. colour character(1) valid colour colouring axis text, axis ticks axis line. Overrules colour assigned theme. color character(1) valid colour colouring axis text, axis ticks axis line. Overrules colour assigned theme. trunc_lower lower upper range truncated axis: NULL perform truncation. function takes break positions input returns lower upper boundary. Note also discrete scales, positions mapped positions numeric. numeric value data units lower upper boundaries. unit object. trunc_upper lower upper range truncated axis: NULL perform truncation. function takes break positions input returns lower upper boundary. Note also discrete scales, positions mapped positions numeric. numeric value data units lower upper boundaries. unit object. position guide drawn: one top, bottom, left, right.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_axis_manual.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manual axis — guide_axis_manual","text":"axis_manual guide class object.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_axis_manual.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manual axis — guide_axis_manual","text":"","code":"ggplot(iris, aes(Species, Sepal.Width)) +   geom_boxplot(aes(fill = Species)) +   guides(x = guide_axis_manual(     label_colour = scales::hue_pal()(3),     label_face = c(\"bold\", \"italic\", \"plain\"),     labels = toupper   ))   # Using the manual axis to annotate some specific point ggplot(pressure, aes(temperature, pressure)) +   geom_point() +   geom_hline(yintercept = 300, linetype = 2, colour = \"blue\") +   guides(y.sec = guide_axis_manual(breaks = 300, labels = \"some\\nthreshold\",                                    label_colour = \"blue\"))"},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_axis_minor.html","id":null,"dir":"Reference","previous_headings":"","what":"Axis guide with ticks for minor breaks — guide_axis_minor","title":"Axis guide with ticks for minor breaks — guide_axis_minor","text":"similar normal axis guides position scales, also place tickmarks minor break positions.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_axis_minor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axis guide with ticks for minor breaks — guide_axis_minor","text":"","code":"guide_axis_minor(   title = waiver(),   check.overlap = FALSE,   angle = NULL,   n.dodge = 1,   order = 0,   colour = NULL,   color = NULL,   trunc_lower = NULL,   trunc_upper = NULL,   position = waiver() )"},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_axis_minor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axis guide with ticks for minor breaks — guide_axis_minor","text":"title character string expression indicating title guide. NULL, title shown. default (waiver()), name scale object name specified labs() used title. check.overlap silently remove overlapping labels, (recursively) prioritizing first, last, middle labels. angle Compared setting angle theme() / element_text(), also uses heuristics automatically pick hjust vjust probably want. n.dodge number rows (vertical axes) columns (horizontal axes) used render labels. useful displaying labels otherwise overlap. order Used determine order guides (left--right, top--bottom), one  guide must drawn location. colour character(1) valid colour colouring axis text, axis ticks axis line. Overrules colour assigned theme. color character(1) valid colour colouring axis text, axis ticks axis line. Overrules colour assigned theme. trunc_lower lower upper range truncated axis: NULL perform truncation. function takes break positions input returns lower upper boundary. Note also discrete scales, positions mapped positions numeric. numeric value data units lower upper boundaries. unit object. trunc_upper lower upper range truncated axis: NULL perform truncation. function takes break positions input returns lower upper boundary. Note also discrete scales, positions mapped positions numeric. numeric value data units lower upper boundaries. unit object. position guide drawn: one top, bottom, left, right.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_axis_minor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axis guide with ticks for minor breaks — guide_axis_minor","text":"axis_minor guide class object.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_axis_minor.html","id":"theme-elements","dir":"Reference","previous_headings":"","what":"Theme elements","title":"Axis guide with ticks for minor breaks — guide_axis_minor","text":"axis guide uses following theme elements: ggh4x.axis.ticks.length.minor rel() object set size minor ticks relative length major ticks (axis.ticks.length). Defaults rel(2/3).","code":""},{"path":[]},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_axis_minor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axis guide with ticks for minor breaks — guide_axis_minor","text":"","code":"# Using the minor breaks axis p <- ggplot(iris, aes(Sepal.Width, Sepal.Length)) +   geom_point() p + scale_y_continuous(guide = \"axis_minor\")   # Minor break positions are still controlled by the scale p + scale_y_continuous(guide = \"axis_minor\",                        minor_breaks = seq(4, 8, by = 0.2))   # Minor tick length is controlled relative to major ticks p + scale_y_continuous(guide = \"axis_minor\") +   theme(ggh4x.axis.ticks.length.minor = rel(0.1))"},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_axis_nested.html","id":null,"dir":"Reference","previous_headings":"","what":"Nested axis guide — guide_axis_nested","title":"Nested axis guide — guide_axis_nested","text":"Discrete position scales containing interacting factors can visualised clearly nested axis guide. Nested axis guides separate labels based delimiter groups identical later labels, indicating grouping line spanning earlier labels.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_axis_nested.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nested axis guide — guide_axis_nested","text":"","code":"guide_axis_nested(   title = waiver(),   check.overlap = FALSE,   angle = NULL,   n.dodge = 1,   order = 0,   position = waiver(),   delim = waiver(),   trunc_lower = NULL,   trunc_upper = NULL,   colour = NULL,   color = NULL,   extend = 0.5 )"},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_axis_nested.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nested axis guide — guide_axis_nested","text":"title character string expression indicating title guide. NULL, title shown. default (waiver()), name scale object name specified labs() used title. check.overlap silently remove overlapping labels, (recursively) prioritizing first, last, middle labels. angle Compared setting angle theme() / element_text(), also uses heuristics automatically pick hjust vjust probably want. n.dodge number rows (vertical axes) columns (horizontal axes) used render labels. useful displaying labels otherwise overlap. order Used determine order guides (left--right, top--bottom), one  guide must drawn location. position guide drawn: one top, bottom, left, right. delim character length 1 tell strsplit hierarchies broken . Internally defaults \".\" match interaction's default delimiter. trunc_lower lower upper range truncated axis: NULL perform truncation. function takes break positions input returns lower upper boundary. Note also discrete scales, positions mapped positions numeric. numeric value data units lower upper boundaries. unit object. trunc_upper lower upper range truncated axis: NULL perform truncation. function takes break positions input returns lower upper boundary. Note also discrete scales, positions mapped positions numeric. numeric value data units lower upper boundaries. unit object. colour character(1) valid colour colouring axis text, axis ticks axis line. Overrules colour assigned theme. color character(1) valid colour colouring axis text, axis ticks axis line. Overrules colour assigned theme. extend numeric length 1 indicating much extend nesting lines relative smallest difference break positions.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_axis_nested.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Nested axis guide — guide_axis_nested","text":"axis_nested guide class object.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_axis_nested.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Nested axis guide — guide_axis_nested","text":"guide makes effort group order labels. get nice groupings, consider re-ordering levels factor variables, try setting 'breaks' argument scale appropriately.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_axis_nested.html","id":"theme-elements","dir":"Reference","previous_headings":"","what":"Theme elements","title":"Nested axis guide — guide_axis_nested","text":"axis guide uses following theme elements: ggh4x.axis.nestline.x/y element_line() object alter display line separating different layers labels. ggh4x.axis.nesttext.x/y element_text() object differentiate text higher hierarchy, text closest axis line.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_axis_nested.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Nested axis guide — guide_axis_nested","text":"","code":"# The defaults are suited for interaction variables ggplot(mpg, aes(interaction(cyl, class), hwy)) +   geom_boxplot() +   scale_x_discrete(guide = \"axis_nested\")   # Control where labels are cut with the delim argument ggplot(mpg, aes(interaction(cyl, class, sep = \"~!~\"), hwy)) +   geom_boxplot() +   scale_x_discrete(guide = guide_axis_nested(delim = \"!\"))   # The nesting lines inherit looks from axis ticks ggplot(mpg, aes(interaction(cyl, class), hwy)) +   geom_boxplot() +   scale_x_discrete(guide = \"axis_nested\") +   theme(axis.ticks = element_line(colour = \"red\"))   # The looks can be controlled independently by setting `ggh4x.axis.nestline` ggplot(mpg, aes(interaction(cyl, class), hwy)) +   geom_boxplot() +   scale_x_discrete(guide = \"axis_nested\") +   theme(ggh4x.axis.nestline = element_line(linetype = 2))"},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_axis_scalebar.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale bar axis guide — guide_axis_scalebar","title":"Scale bar axis guide — guide_axis_scalebar","text":"axis guides draws scale bar indicate distance rather mark absolute values.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_axis_scalebar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale bar axis guide — guide_axis_scalebar","text":"","code":"guide_axis_scalebar(   title = waiver(),   size = NULL,   label = NULL,   colour = NULL,   color = NULL,   just = 1,   position = waiver() )"},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_axis_scalebar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale bar axis guide — guide_axis_scalebar","text":"title character string expression indicating title guide. NULL, title shown. default (waiver()), name scale object name specified labs() used title. size numeric(1) distance indicate, data units. NULL (default), median distance breaks taken. label character(1) use scale bar label. NULL (default), size distance fed scale's labeller. colour character(1) valid colour colouring axis text, axis ticks axis line. Overrules colour assigned theme. color character(1) valid colour colouring axis text, axis ticks axis line. Overrules colour assigned theme. just numeric(1) 0 1 indicate scalebar drawn relative plot panel. default (1), places right top. position guide drawn: one top, bottom, left, right.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_axis_scalebar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale bar axis guide — guide_axis_scalebar","text":"axis_scalebar guide class object.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_axis_scalebar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scale bar axis guide — guide_axis_scalebar","text":"discouraged use guide combination scale transformation.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_axis_scalebar.html","id":"theme-elements","dir":"Reference","previous_headings":"","what":"Theme elements","title":"Scale bar axis guide — guide_axis_scalebar","text":"axis guide alternative understanding following theme elements: axis.ticks.* element_line() draw scale bar . axis.ticks.length.* unit() indicating far scale bar placed plot panel. Can negative unit place scale bar inside plot panel. axis.text.* hjust vjust parameters used justify text along scale bar, instead along , x y directions respectively.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_axis_scalebar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scale bar axis guide — guide_axis_scalebar","text":"","code":"# A standard plot p <- ggplot(mpg, aes(displ, hwy)) +   geom_point()  # Guide as secondary axis p + guides(x.sec = \"axis_scalebar\")   # Customising size and label p + guides(x.sec = guide_axis_scalebar(size = 0.5, label = \"0.5 litre\"))   # Placing the scale bar on top of the plotting panel p + guides(x.sec = guide_axis_scalebar(just = 0.95)) +   theme(axis.ticks.length.x.top = unit(-2, \"lines\"))   # Adding arrows through the axis.ticks theme element p + guides(y.sec = guide_axis_scalebar(size = 10, label = \"10\\nmpg\")) +   theme(axis.ticks.y.right = element_line(arrow = arrow(ends = \"both\")))"},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_axis_truncated.html","id":null,"dir":"Reference","previous_headings":"","what":"Axis guide with truncated line — guide_axis_truncated","title":"Axis guide with truncated line — guide_axis_truncated","text":"axis guide similar normal axis guides position scales, can shorten axis line drawn. guide_axis_colour() function different defaults truncation truncate axis. Axis truncation recolouring supported throughout axes ggh4x.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_axis_truncated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axis guide with truncated line — guide_axis_truncated","text":"","code":"guide_axis_truncated(   title = waiver(),   check.overlap = FALSE,   angle = NULL,   n.dodge = 1,   order = 0,   colour = NULL,   color = NULL,   trunc_lower = min,   trunc_upper = max,   position = waiver() )  guide_axis_colour(   title = waiver(),   check.overlap = FALSE,   angle = NULL,   n.dodge = 1,   order = 0,   colour = NULL,   color = NULL,   trunc_lower = NULL,   trunc_upper = NULL,   position = waiver() )  guide_axis_color(   title = waiver(),   check.overlap = FALSE,   angle = NULL,   n.dodge = 1,   order = 0,   colour = NULL,   color = NULL,   trunc_lower = NULL,   trunc_upper = NULL,   position = waiver() )"},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_axis_truncated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axis guide with truncated line — guide_axis_truncated","text":"title character string expression indicating title guide. NULL, title shown. default (waiver()), name scale object name specified labs() used title. check.overlap silently remove overlapping labels, (recursively) prioritizing first, last, middle labels. angle Compared setting angle theme() / element_text(), also uses heuristics automatically pick hjust vjust probably want. n.dodge number rows (vertical axes) columns (horizontal axes) used render labels. useful displaying labels otherwise overlap. order Used determine order guides (left--right, top--bottom), one  guide must drawn location. colour, color character(1) valid colour colouring axis text, axis ticks axis line. Overrules colour assigned theme. trunc_lower, trunc_upper lower upper range truncated axis: NULL perform truncation. function takes break positions input returns lower upper boundary. Note also discrete scales, positions mapped positions numeric. numeric value data units lower upper boundaries. unit object. position guide drawn: one top, bottom, left, right.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_axis_truncated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axis guide with truncated line — guide_axis_truncated","text":"axis_ggh4x guide class object.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_axis_truncated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axis guide with truncated line — guide_axis_truncated","text":"","code":"# Make a plot p <- ggplot(mtcars, aes(wt, mpg)) +   geom_point() +   theme(axis.line = element_line(colour = \"black\"))  # Setting the default truncated axis p + guides(x = \"axis_truncated\")   # Truncating in data units p + guides(x = guide_axis_truncated(   trunc_lower = 2.5, trunc_upper = 4.5 ))   # Truncate by setting units p + guides(x = guide_axis_truncated(   trunc_lower = unit(0.1, \"npc\"),   trunc_upper = unit(0.9, \"npc\") ))   # Truncating with functions p + guides(x = guide_axis_truncated(   trunc_lower = function(x) {x - 0.2},   trunc_upper = function(x) {x + 0.2} ))   # Recolouring the axes outside the theme p + guides(x = guide_axis_colour(colour = \"red\"),            y = guide_axis_colour(colour = \"blue\"))"},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_dendro.html","id":null,"dir":"Reference","previous_headings":"","what":"Dendrogram guide — guide_dendro","title":"Dendrogram guide — guide_dendro","text":"Visual representation discrete variable hierarchical relationships members, like detailed scale_(x|y)_dendrogram)().","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_dendro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dendrogram guide — guide_dendro","text":"","code":"guide_dendro(   title = waiver(),   check.overlap = FALSE,   n.dodge = 1,   order = 0,   position = waiver(),   label = TRUE,   trunc_lower = NULL,   trunc_upper = NULL,   colour = NULL,   color = NULL,   dendro = waiver() )"},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_dendro.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dendrogram guide — guide_dendro","text":"title character string expression indicating title guide. NULL, title shown. default (waiver()), name scale object name specified labs() used title. check.overlap silently remove overlapping labels, (recursively) prioritizing first, last, middle labels. n.dodge number rows (vertical axes) columns (horizontal axes) used render labels. useful displaying labels otherwise overlap. order Used determine order guides (left--right, top--bottom), one  guide must drawn location. position guide drawn: one top, bottom, left, right. label logical(1). TRUE, labels drawn dendrogram leaves. FALSE, labels drawn. trunc_lower lower upper range truncated axis: NULL perform truncation. function takes break positions input returns lower upper boundary. Note also discrete scales, positions mapped positions numeric. numeric value data units lower upper boundaries. unit object. trunc_upper lower upper range truncated axis: NULL perform truncation. function takes break positions input returns lower upper boundary. Note also discrete scales, positions mapped positions numeric. numeric value data units lower upper boundaries. unit object. colour character(1) valid colour colouring axis text, axis ticks axis line. Overrules colour assigned theme. color character(1) valid colour colouring axis text, axis ticks axis line. Overrules colour assigned theme. dendro Relevant plotting data dendrogram returned ggdendro::dendro_data().","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_dendro.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dendrogram guide — guide_dendro","text":"dendroguide class object.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_dendro.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dendrogram guide — guide_dendro","text":"dendrogram guide inherits graphical elements axis.ticks theme element. However, size dendrogram set 10 times axis.ticks.length theme element.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_dendro.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dendrogram guide — guide_dendro","text":"","code":"clust <- hclust(dist(USArrests), \"ave\")  # Melting USArrests df <- data.frame(   State = rownames(USArrests)[row(USArrests)],   variable = colnames(USArrests)[col(USArrests)],   value = unname(do.call(c, USArrests)) )  # The guide function can be used to customise the axis g <- ggplot(df, aes(variable, State, fill = value)) +   geom_raster() +   scale_y_dendrogram(hclust = clust,                      guide = guide_dendro(n.dodge = 2))  # The looks of the dendrogram are controlled through ticks g + theme(axis.ticks = element_line(colour = \"red\"))   # The size of the dendrogram is controlled through tick size * 10 g + theme(axis.ticks.length = unit(5, \"pt\"))"},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_stringlegend.html","id":null,"dir":"Reference","previous_headings":"","what":"String legend — guide_stringlegend","title":"String legend — guide_stringlegend","text":"type legend shows colour fill mappings coloured text. draw keys guide_legend() .","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_stringlegend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"String legend — guide_stringlegend","text":"","code":"guide_stringlegend(   title = waiver(),   title.position = NULL,   title.theme = NULL,   title.hjust = NULL,   title.vjust = NULL,   label.theme = NULL,   label.hjust = NULL,   label.vjust = NULL,   family = NULL,   face = NULL,   size = NULL,   spacing.x = NULL,   spacing.y = NULL,   spacing = NULL,   default.units = \"pt\",   direction = NULL,   nrow = NULL,   ncol = NULL,   byrow = FALSE,   reverse = FALSE,   order = 0,   ... )"},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_stringlegend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"String legend — guide_stringlegend","text":"title character string expression indicating title guide. NULL, title shown. default (waiver()), name scale object name specified labs() used title. title.position character string indicating position title. One \"top\" (default vertical guide), \"bottom\", \"left\" (default horizontal guide), \"right.\" title.theme theme object rendering title text. Usually object element_text() expected. default, theme specified legend.title theme() theme. title.hjust number specifying horizontal justification title text. title.vjust number specifying vertical justification title text. label.theme theme object rendering label text. Usually object element_text() expected. default, theme specified legend.text theme(). label.hjust numeric specifying horizontal justification label text. label.vjust numeric specifying vertical justification label text. family character(1) setting font family labels. face character(1) setting font face labels. One following: \"plain\", \"italic\" \"bold\", \"bold.italic\". size numeric(1) setting label text size pts. spacing.x, spacing.y, spacing numeric(1) unit spacing label rows columns. Internally defaults half size title. default.units character(1) indicating default units use spacing.* arguments given numeric vectors. direction character string indicating direction guide. One \"horizontal\" \"vertical.\" nrow desired number rows legends. ncol desired number column legends. byrow logical. FALSE (default) legend-matrix filled columns, otherwise legend-matrix filled rows. reverse logical. TRUE order legends reversed. order positive integer less 99 specifies order guide among multiple guides. controls order multiple guides displayed, contents guide . 0 (default), order determined secret algorithm. ... ignored.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_stringlegend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"String legend — guide_stringlegend","text":"guide, stringlegend S3 object.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/guide_stringlegend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"String legend — guide_stringlegend","text":"","code":"p <- ggplot(mpg, aes(displ, hwy)) +   geom_point(aes(colour = manufacturer))  # String legend can be set in the `guides()` function p + guides(colour = guide_stringlegend(ncol = 2))   # The string legend can also be set as argument to the scale p + scale_colour_viridis_d(guide = \"stringlegend\")"},{"path":"https://teunbrand.github.io/ggh4x/reference/help_secondary.html","id":null,"dir":"Reference","previous_headings":"","what":"Secondary axis helper — help_secondary","title":"Secondary axis helper — help_secondary","text":"purpose function construct secondary axis projection function.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/help_secondary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Secondary axis helper — help_secondary","text":"","code":"help_secondary(   data = NULL,   primary = c(0, 1),   secondary = c(0, 1),   method = c(\"range\", \"max\", \"fit\", \"ccf\", \"sortfit\"),   ... )"},{"path":"https://teunbrand.github.io/ggh4x/reference/help_secondary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Secondary axis helper — help_secondary","text":"data data.frame object. primary, secondary expression evaluated context data argument. can symbols column names plain expressions. method One following: \"range\" Causes ranges primary secondary data overlap completely. \"max\" Causes maxima primary secondary data coincide. \"fit\" Uses coefficients lm(primary ~ secondary) make axes fit. \"ccf\" Uses lag maximum cross-correlation occurs align data truncation. aligned data passed \"fit\" method. \"sortfit\" Sorts primary secondary independently passing \"fit\" method. ... Arguments passed ggplot2::sec_axis name name secondary axis breaks One : NULL breaks waiver() default breaks computed transformation object numeric vector positions function takes limits input returns breaks output labels One : NULL labels waiver() default labels computed transformation object character vector giving labels (must length breaks) function takes breaks input returns labels output guide position guide used render axis plot. Usually guide_axis().","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/help_secondary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Secondary axis helper — help_secondary","text":"AxisSecondary ggproto object proj method projecting secondary data.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/help_secondary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Secondary axis helper — help_secondary","text":"intent run function starting plot. output function secondary axis wherein trans argument sec_axis() populated appropriate transformation. addition, output also contains output$proj() function helps transform secondary data.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/help_secondary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Secondary axis helper — help_secondary","text":"","code":"# Run the secondary axis helper sec <- help_secondary(economics, primary = unemploy, secondary = psavert)  # Making primary plot p <- ggplot(economics, aes(date)) +   geom_line(aes(y = unemploy), colour = \"blue\")  # For the secondary data, later we use the `proj` function from the helper p <- p + geom_line(aes(y = sec$proj(psavert)), colour = \"red\")  # We feed the scale the secondary axis p + scale_y_continuous(sec.axis = sec)   # Setup cross-correlated data set.seed(42) n <- 100 lag <- 20 dat <- cumsum(rnorm(n + lag)) df <- data.frame(   x = seq_len(n),   y1 = head(dat, n),   y2 = 10 + tail(dat, n) * 5 # offset and scale y2 ) # Choosing the cross-correlation function method. sec <- help_secondary(df, y1, y2, method = \"ccf\")  ggplot(df, aes(x)) +   geom_line(aes(y = y1), colour = \"blue\") +   geom_line(aes(y = sec$proj(y2)), colour = \"red\") +   scale_y_continuous(sec.axis = sec)"},{"path":"https://teunbrand.github.io/ggh4x/reference/position_disjoint_ranges.html","id":null,"dir":"Reference","previous_headings":"","what":"Segregating overlapping ranges — position_disjoint_ranges","title":"Segregating overlapping ranges — position_disjoint_ranges","text":"One-dimensional ranged data x-direction segregated y-direction overlap two-dimensional space occurs. positioning works best relevant information plotted y-direction.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/position_disjoint_ranges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Segregating overlapping ranges — position_disjoint_ranges","text":"","code":"position_disjoint_ranges(extend = 1, stepsize = 1)"},{"path":"https://teunbrand.github.io/ggh4x/reference/position_disjoint_ranges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Segregating overlapping ranges — position_disjoint_ranges","text":"extend numeric length 1 indicating far range extended total calculating overlaps. Setting argument positive number leaves space ranges bin. stepsize numeric length 1 determines much space added bins y-direction. positive value grows bins bottom top, negative value grows bins top bottom.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/position_disjoint_ranges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Segregating overlapping ranges — position_disjoint_ranges","text":"PositionDisjointRanges object.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/position_disjoint_ranges.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Segregating overlapping ranges — position_disjoint_ranges","text":"object considered disjoint second object range xmin xmax coordinates overlap. Objects overlap assigned different bins y-direction, whereby lower bins filled first. way, information x-direction preserved different objects can discerned. Note positioning particularly useful y-coordinates encode relevant information. Geoms pair well positioning geom_rect() ggplot2::geom_tile(). positioning function inspired disjointBins() function IRanges package, written accepts numeric input next solely integer input.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/ggh4x/reference/position_disjoint_ranges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Segregating overlapping ranges — position_disjoint_ranges","text":"","code":"# Even though geom_tile() is parametrised by middle-x values, it is # internally converted to xmin, xmax, ymin, ymax parametrisation so the # positioning still works.  ggplot() +   geom_tile(aes(x = rnorm(200), y = 0),             width = 0.2, height = 0.9,             position = position_disjoint_ranges(extend = 0.1))"},{"path":"https://teunbrand.github.io/ggh4x/reference/position_lineartrans.html","id":null,"dir":"Reference","previous_headings":"","what":"Linearly transform coordinates — position_lineartrans","title":"Linearly transform coordinates — position_lineartrans","text":"Transforms coordinates two dimensions linear manner layers x y parametrisation.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/position_lineartrans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linearly transform coordinates — position_lineartrans","text":"","code":"position_lineartrans(scale = c(1, 1), shear = c(0, 0), angle = 0, M = NULL)"},{"path":"https://teunbrand.github.io/ggh4x/reference/position_lineartrans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linearly transform coordinates — position_lineartrans","text":"scale numeric length two describing relative units multiply x y coordinates respectively. shear numeric length two giving relative units shear output. first number vertical shearing whereas second horizontal shearing. angle numeric noting angle degrees rotate input clockwise. M 2 x 2 real matrix: transformation matrix linear mapping. Overrides arguments provided.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/position_lineartrans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linearly transform coordinates — position_lineartrans","text":"PositionLinearTrans ggproto object.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/position_lineartrans.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Linearly transform coordinates — position_lineartrans","text":"Linear transformation matrices 2 x 2 real matrices. 'scale', 'shear' 'rotation' arguments convenience arguments construct transformation matrix. operations occur order: scaling - shearing - rotating. apply transformations another order, build custom 'M' argument. common transformations, can find appropriate matrices 'M' argument .","code":""},{"path":[]},{"path":"https://teunbrand.github.io/ggh4x/reference/position_lineartrans.html","id":"identity-transformations","dir":"Reference","previous_headings":"","what":"Identity transformations","title":"Linearly transform coordinates — position_lineartrans","text":"identity transformation, returning original coordinates, can performed using following transformation matrix: | 1 0 || 0 1 | M <- matrix(c(1, 0, 0, 1), 2)","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/position_lineartrans.html","id":"scaling","dir":"Reference","previous_headings":"","what":"Scaling","title":"Linearly transform coordinates — position_lineartrans","text":"scaling transformation multiplies dimension object amount. example transformation matrix scaling everything factor 2: | 2 0 || 0 2 | M <- matrix(c(2, 0, 0, 2), 2)","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/position_lineartrans.html","id":"squeezing","dir":"Reference","previous_headings":"","what":"Squeezing","title":"Linearly transform coordinates — position_lineartrans","text":"Similar scaling, squeezing multiplies dimensions amount unequal x y coordinates. example, squeezing y half expanding x two: M <- matrix(c(2, 0, 0, 0.5), 2)","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/position_lineartrans.html","id":"reflection","dir":"Reference","previous_headings":"","what":"Reflection","title":"Linearly transform coordinates — position_lineartrans","text":"Mirroring coordinates around one axes. Reflecting around x-axis: M <- matrix(c(1, 0, 0, -1), 2)  Reflecting around y-axis: M <- matrix(c(-1, 0, 0, 1), 2)","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/position_lineartrans.html","id":"projection","dir":"Reference","previous_headings":"","what":"Projection","title":"Linearly transform coordinates — position_lineartrans","text":"projecting coordinates one axes, collapsing everything axis. Projecting onto y-axis: M <- matrix(c(0, 0, 0, 1), 2)  Projecting onto x-axis: M <- matrix(c(1, 0, 0, 0), 2)","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/position_lineartrans.html","id":"shearing","dir":"Reference","previous_headings":"","what":"Shearing","title":"Linearly transform coordinates — position_lineartrans","text":"Tilting coordinates horizontally vertically. Shearing vertically 10\\ M <- matrix(c(1, 0.1, 0, 1), 2)  Shearing horizontally 200\\ M <- matrix(c(1, 0, 2, 1), 2)","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/position_lineartrans.html","id":"rotation","dir":"Reference","previous_headings":"","what":"Rotation","title":"Linearly transform coordinates — position_lineartrans","text":"rotation performs motion around fixed point, typically origin coordinate system. rotate coordinates 90 degrees counter-clockwise: M <- matrix(c(0, 1, -1, 0), 2)  rotation around angle \\(\\theta\\) : M <- matrix(c(cos(theta), sin(theta), -sin(theta), cos(theta)), 2)  'theta' defined radians.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/position_lineartrans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linearly transform coordinates — position_lineartrans","text":"","code":"df <- data.frame(x = c(0, 1, 1, 0),                  y = c(0, 0, 1, 1)) ggplot(df, aes(x, y)) +   geom_polygon(position = position_lineartrans(angle = 30))   # Custom transformation matrices # Rotation theta <- -30 * pi / 180 rot <- matrix(c(cos(theta), sin(theta), -sin(theta), cos(theta)), 2) # Shear shear <- matrix(c(1, 0, 1, 1), 2)  # Shear and then rotate M <- rot %*% shear ggplot(df, aes(x, y)) +   geom_polygon(position = position_lineartrans(M = M))  # Alternative shear and then rotate ggplot(df, aes(x, y)) +   geom_polygon(position = position_lineartrans(shear = c(0, 1), angle = 30))   # Rotate and then shear M <- shear %*% rot ggplot(df, aes(x, y)) +   geom_polygon(position = position_lineartrans(M = M))"},{"path":"https://teunbrand.github.io/ggh4x/reference/scale_dendrogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Dendrogram position scales — scale_dendrogram","title":"Dendrogram position scales — scale_dendrogram","text":"discrete data inherent hierarchy relationship discrete categories, can display dendrogram instead tick axis.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/scale_dendrogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dendrogram position scales — scale_dendrogram","text":"","code":"scale_x_dendrogram(   ...,   hclust = waiver(),   expand = waiver(),   guide = waiver(),   position = \"bottom\" )  scale_y_dendrogram(   ...,   hclust = waiver(),   expand = waiver(),   guide = waiver(),   position = \"left\" )"},{"path":"https://teunbrand.github.io/ggh4x/reference/scale_dendrogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dendrogram position scales — scale_dendrogram","text":"... Arguments passed ggplot2::discrete_scale aesthetics names aesthetics scale works . scale_name name scale used error messages associated scale. palette palette function called single integer argument (number levels scale) returns values take (e.g., scales::hue_pal()). name name scale. Used axis legend title. waiver(), default, name scale taken first mapping used aesthetic. NULL, legend title omitted. labels One : NULL labels waiver() default labels computed transformation object character vector giving labels (must length breaks) expression vector (must length breaks). See ?plotmath details. function takes breaks input returns labels output. Also accepts rlang lambda function notation. limits One : NULL use default scale values character vector defines possible values scale order function accepts existing (automatic) values returns new ones. Also accepts rlang lambda function notation. na.translate Unlike continuous scales, discrete scales can easily show missing values, default. want remove missing values discrete scale, specify na.translate = FALSE. na.value na.translate = TRUE, aesthetic value missing values displayed ? apply position scales NA always placed far right. drop unused factor levels omitted scale? default, TRUE, uses levels appear data; FALSE uses levels factor. super super class use constructed scale hclust object type produced stats::hclust() function. expand position scales, vector range expansion constants used add padding around data ensure placed distance away axes. Use convenience function expansion() generate values expand argument. defaults expand scale 5% side continuous variables, 0.6 units side discrete variables. guide function used create guide name. See guides() information. position position scales, position axis. left right y axes, top bottom x axes.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/scale_dendrogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dendrogram position scales — scale_dendrogram","text":"ScaleDendrogram ggproto object.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/scale_dendrogram.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dendrogram position scales — scale_dendrogram","text":"dendrogram type scale two things, first reorders values along relevant direction follow order captured hclust argument. Secondly, draws dendrogram axis. dendrogram visuals inherit ticks theme elements, defining linetype tick marks sets linetype dendrogram.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/scale_dendrogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dendrogram position scales — scale_dendrogram","text":"","code":"# Hierarchically cluster USArrests yclus <- hclust(dist(USArrests), \"ave\") xclus <- hclust(dist(t(USArrests)), \"ave\")  # Melting USArrests df <- data.frame(   State = rownames(USArrests)[row(USArrests)],   variable = colnames(USArrests)[col(USArrests)],   value = unname(do.call(c, USArrests)) )  # Supply the clustering to the scales ggplot(df, aes(variable, State, fill = value)) +   geom_raster() +   scale_y_dendrogram(hclust = yclus) +   scale_x_dendrogram(hclust = xclus)"},{"path":"https://teunbrand.github.io/ggh4x/reference/scale_fill_multi.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiple gradient colour scales — scale_fill_multi","title":"Multiple gradient colour scales — scale_fill_multi","text":"Maps multiple aesthetics multiple colour fill gradient scales. takes listed arguments aesthetic disseminates ggplot2::continuous_scale().","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/scale_fill_multi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiple gradient colour scales — scale_fill_multi","text":"","code":"scale_fill_multi(   ...,   colours,   values = NULL,   na.value = \"transparent\",   guide = \"colourbar\",   aesthetics = \"fill\",   colors )  scale_colour_multi(   ...,   colours,   values = NULL,   na.value = \"transparent\",   guide = \"colourbar\",   aesthetics = \"colour\",   colors )"},{"path":"https://teunbrand.github.io/ggh4x/reference/scale_fill_multi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiple gradient colour scales — scale_fill_multi","text":"..., colours, values, na.value, guide, colors listed arguments scale_colour_gradientn() (e.g. colours = list(c(\"white\", \"red\"), c(\"black\", \"blue\"))). aesthetics character vector names aesthetic mapping.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/scale_fill_multi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiple gradient colour scales — scale_fill_multi","text":"nested list-like structure class MultiScale.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/scale_fill_multi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multiple gradient colour scales — scale_fill_multi","text":"function called layers function affects added plot. list elements listed arguments assumed follow aesthetics order, .e. nth list element belongs nth aesthetic. list elements n aesthetics, first nth list elements taken. aesthetics list elements, first list element used remaining aesthethics. contrast scale_*_continous-family functions, guide argument interpreted adding plot instead time plot building. behaviour ensures available_aes argument guides set correctly, may interfere ggplot2::guides() function.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/scale_fill_multi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multiple gradient colour scales — scale_fill_multi","text":"","code":"# Setup dummy data df <- rbind(data.frame(x = 1:3, y = 1, v = NA, w = 1:3, z = NA),             data.frame(x = 1:3, y = 2, v = 1:3, w = NA, z = NA),             data.frame(x = 1:3, y = 3, v = NA, w = NA, z = 1:3))  ggplot(df, aes(x, y)) +   geom_raster(aes(fill1 = v)) +   geom_raster(aes(fill2 = w)) +   geom_raster(aes(fill3 = z)) +   scale_fill_multi(aesthetics = c(\"fill1\", \"fill2\", \"fill3\"),                    colours = list(c(\"white\", \"red\"),                                   c(\"black\", \"blue\"),                                   c(\"grey50\", \"green\"))) #> Warning: Ignoring unknown aesthetics: fill1 #> Warning: Ignoring unknown aesthetics: fill2 #> Warning: Ignoring unknown aesthetics: fill3"},{"path":"https://teunbrand.github.io/ggh4x/reference/scale_listed.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a list of scales for non-standard aesthetics — scale_listed","title":"Add a list of scales for non-standard aesthetics — scale_listed","text":"function called layers non-standard aesthetic scales affects added plot. Inside layer, non-standard aesthetic part call aes mapping. May return warning plot ignoring unknown aesthetics.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/scale_listed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a list of scales for non-standard aesthetics — scale_listed","text":"","code":"scale_listed(scalelist, replaces = NULL)"},{"path":"https://teunbrand.github.io/ggh4x/reference/scale_listed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a list of scales for non-standard aesthetics — scale_listed","text":"scalelist list wherein elements results calls scale function non-standard aesthetic set aesthetic argument. replaces character vector length - parallel - scalelist, indicating standard aesthetic replace non-standard aesthetic. Typically \"colour\" \"fill\".","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/scale_listed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a list of scales for non-standard aesthetics — scale_listed","text":"list elements class MultiScale.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/scale_listed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a list of scales for non-standard aesthetics — scale_listed","text":"Distributes list non-standard aesthetics scales plot, substituting geom scale settings necessary display non-standard aesthetics. Useful mapping different geoms different scales example.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/scale_listed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a list of scales for non-standard aesthetics — scale_listed","text":"","code":"# Annotation of heatmap iriscor <- cor(t(iris[, 1:4]))  df <- data.frame(   x = as.vector(row(iriscor)),   y = as.vector(col(iriscor)),   value = as.vector(iriscor) )  annotation <- data.frame(   z = seq_len(nrow(iris)),   Species = iris$Species,   Leaves = ifelse(iris$Species == \"setosa\", \"Short\", \"Long\") )  ggplot(df, aes(x, y)) +   geom_raster(aes(fill = value)) +   geom_tile(data = annotation,             aes(x = z, y = -5, spec = Species), height = 5) +   geom_tile(data = annotation,             aes(y = z, x = -5, leav = Leaves), width = 5) +   scale_listed(     list(scale_fill_brewer(palette = \"Set1\", aesthetics = \"spec\"),          scale_fill_brewer(palette = \"Dark2\", aesthetics = \"leav\")),     replaces = c(\"fill\", \"fill\")   ) #> Warning: Ignoring unknown aesthetics: spec #> Warning: Ignoring unknown aesthetics: leav"},{"path":"https://teunbrand.github.io/ggh4x/reference/stat_difference.html","id":null,"dir":"Reference","previous_headings":"","what":"Difference ribbon — stat_difference","title":"Difference ribbon — stat_difference","text":"makes ribbon filled depending whether max higher min. can useful displaying differences two series.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/stat_difference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Difference ribbon — stat_difference","text":"","code":"stat_difference(   mapping = NULL,   data = NULL,   geom = \"ribbon\",   position = \"identity\",   ...,   levels = c(\"+\", \"-\", \"0\"),   na.rm = FALSE,   orientation = NA,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://teunbrand.github.io/ggh4x/reference/stat_difference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Difference ribbon — stat_difference","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). geom Use override default connection geom_density() stat_density(). position Position adjustment, either string, result call position adjustment function. ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. levels character(3) indicating factor levels fill aesthetic following cases (1) max > min (2) max < min (3) max == min. padded NAs necessary. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. orientation orientation layer. default (NA) automatically determines orientation aesthetic mapping. rare event fails can given explicitly setting orientation either \"x\" \"y\". See Orientation section detail. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/stat_difference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Difference ribbon — stat_difference","text":"Layer object can added plot.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/stat_difference.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Difference ribbon — stat_difference","text":"stat may reorder group aesthetic accommodate two different fills signs differences. stat takes care interpolate series whenever crossover max min series happens. makes ribbon look stumpy crossovers.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/stat_difference.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Difference ribbon — stat_difference","text":"geom_ribbon() understands following aesthetics (required aesthetics bold): x y ymin xmin ymax xmax alpha colour fill group linetype size Learn setting aesthetics vignette(\"ggplot2-specs\").","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/stat_difference.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Difference ribbon — stat_difference","text":"sign factor levels attribute set levels argument.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/stat_difference.html","id":"orientation","dir":"Reference","previous_headings":"","what":"Orientation","title":"Difference ribbon — stat_difference","text":"geom treats axis differently , thus, can thus two orientations. Often orientation easy deduce combination given mappings types positional scales use. Thus, ggplot2 default try guess orientation layer . rare circumstances, orientation ambiguous guessing may fail. case orientation can specified directly using orientation parameter, can either \"x\" \"y\". value gives axis geom run along, \"x\" default orientation expect geom.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/ggh4x/reference/stat_difference.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Difference ribbon — stat_difference","text":"","code":"set.seed(2021) df <- data.frame(   x = 1:100,   y = cumsum(rnorm(100)),   z = cumsum(rnorm(100)) )  ggplot(df, aes(x = x)) +   stat_difference(aes(ymin = y, ymax = z), alpha = 0.3) +   geom_line(aes(y = y, colour = \"min\")) +   geom_line(aes(y = z, colour = \"max\"))"},{"path":"https://teunbrand.github.io/ggh4x/reference/stat_funxy.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply function to position coordinates — stat_funxy","title":"Apply function to position coordinates — stat_funxy","text":"function xy stat applies function x- y-coordinates layers positions group. stat_centroid() stat_midpoint() functions convenience wrappers calculating centroids midpoints. stat_funxy() default leaves data -, can supplied functions arguments.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/stat_funxy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply function to position coordinates — stat_funxy","text":"","code":"stat_funxy(   mapping = NULL,   data = NULL,   geom = \"point\",   position = \"identity\",   ...,   funx = force,   funy = force,   argx = list(),   argy = list(),   crop_other = TRUE,   show.legend = NA,   inherit.aes = TRUE )  stat_centroid(   ...,   funx = mean,   funy = mean,   argx = list(na.rm = TRUE),   argy = list(na.rm = TRUE) )  stat_midpoint(..., argx = list(na.rm = TRUE), argy = list(na.rm = TRUE))"},{"path":"https://teunbrand.github.io/ggh4x/reference/stat_funxy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply function to position coordinates — stat_funxy","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). geom geometric object use display data position Position adjustment, either string, result call position adjustment function. ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. funx, funy function call layer's x y positions respectively. argx, argy named list containing arguments funx, funy function calls. crop_other logical length one; whether data fitted length x y (default: TRUE). Useful set FALSE funx funy calculate summaries length one need recycled. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/stat_funxy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply function to position coordinates — stat_funxy","text":"StatFunxy ggproto object, can added plot.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/stat_funxy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply function to position coordinates — stat_funxy","text":"statistic makes minimal attempt ensuring results calling functions equal length. Results length 1 recycled match longest length result.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/stat_funxy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply function to position coordinates — stat_funxy","text":"","code":"p <- ggplot(iris, aes(Sepal.Width, Sepal.Length, colour = Species))  # Labelling group midpoints p + geom_point() +   stat_midpoint(aes(label = Species, group = Species),                 geom = \"text\", colour = \"black\")   # Drawing segments to centroids p + geom_point() +   stat_centroid(aes(xend = Sepal.Width, yend = Sepal.Length),                 geom = \"segment\", crop_other = FALSE)   # Drawing intervals ggplot(iris, aes(Sepal.Width, Sepal.Length, colour = Species)) +   geom_point() +   stat_funxy(geom = \"path\",              funx = median, funy = quantile,              argy = list(probs = c(0.1, 0.9)))"},{"path":"https://teunbrand.github.io/ggh4x/reference/stat_rle.html","id":null,"dir":"Reference","previous_headings":"","what":"Run length encoding — stat_rle","title":"Run length encoding — stat_rle","text":"Run length encoding takes vector values calculates lengths consecutive repeated values.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/stat_rle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run length encoding — stat_rle","text":"","code":"stat_rle(   mapping = NULL,   data = NULL,   geom = \"rect\",   position = \"identity\",   ...,   align = \"none\",   na.rm = FALSE,   orientation = \"x\",   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://teunbrand.github.io/ggh4x/reference/stat_rle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run length encoding — stat_rle","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). geom Use override default connection geom_density() stat_density(). position Position adjustment, either string, result call position adjustment function. ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. align character length one effect computed start end variables. One following: \"none\" Take exact start end x values. \"center\" Return start end x values end subsequent start. \"start\" Align start values previous end values. \"end\" Align end values next start values. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. orientation orientation layer. default (NA) automatically determines orientation aesthetic mapping. rare event fails can given explicitly setting orientation either \"x\" \"y\". See Orientation section detail. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/stat_rle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run length encoding — stat_rle","text":"ggplot2 layer","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/stat_rle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run length encoding — stat_rle","text":"data first ordered x aesthetic run lengths calculated label aesthetic.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/stat_rle.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Run length encoding — stat_rle","text":"stat_rle() understands following aesthetics (required aesthetics bold) x label group","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/stat_rle.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Run length encoding — stat_rle","text":"start x values start every run. end x values end every run. start_id index run starts. end_id index run ends. run_id index run. runlength length run. runvalue value associated run.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/stat_rle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run length encoding — stat_rle","text":"","code":"df <- data.frame(   x = seq(0, 10, length.out = 100),   y = sin(seq(0, 10, length.out = 100)*2) )  # Label every run of increasing values ggplot(df) +   stat_rle(aes(x, label = diff(c(0, y)) > 0),            align = \"end\") +   geom_point(aes(x, y))   # Label every run above some threshold ggplot(df) +   stat_rle(aes(x, label = y > 0),            align = \"center\") +   geom_point(aes(x, y))   # Categorising runs, more complicated usage ggplot(df) +   stat_rle(aes(stage(x, after_stat = run_id),                after_stat(runlength),                label = cut(y, c(-1, -0.6, 0.6, 1)),                fill = after_stat(runvalue)),            geom = \"col\")"},{"path":"https://teunbrand.github.io/ggh4x/reference/stat_rollingkernel.html","id":null,"dir":"Reference","previous_headings":"","what":"Rolling Kernel — stat_rollingkernel","title":"Rolling Kernel — stat_rollingkernel","text":"rolling kernel moves along one axes assigns weights datapoints depending distance kernel's location. calculates weighted average y-values datapoints, creating trendline. contrast (weighted) rolling averages, interval datapoints need constant.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/stat_rollingkernel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rolling Kernel — stat_rollingkernel","text":"","code":"stat_rollingkernel(   mapping = NULL,   data = NULL,   geom = \"line\",   position = \"identity\",   ...,   bw = \"nrd\",   kernel = \"gaussian\",   n = 256,   expand = 0.1,   na.rm = FALSE,   orientation = \"x\",   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://teunbrand.github.io/ggh4x/reference/stat_rollingkernel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rolling Kernel — stat_rollingkernel","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). geom Use override default geom (\"line\"). position Position adjustment, either string, result call position adjustment function. ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. bw bandwidth, can one following: numeric length one indicating measure kernel width, data units. rel object length one constructed setting bandwidth relative group data range. Can constructed rel() function. character length one, naming one functions documented bw.nrd(). kernel One following: function takes vector distances first argument, numeric bandwidth second argument returns relative weights. character length one can take one following values: \"gaussian\" \"norm\" kernel follows normal distribution 0 mean bandwidth standard deviation. \"mean\" \"unif\" kernel follows uniform distribution \\(bandwidth * -0.5\\) \\(bandwidth * 0.5\\) minimum maximum. similar simple, unweighted moving average. \"cauchy\" kernel follows Cauchy distribution 0 location bandwidth scale parameters. Cauchy distribution fatter tails normal distribution. n integer length one: many points return per group. expand numeric length one: much expand range rolling kernel calculated beyond extreme datapoints. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. orientation character length one, either \"x\" (default) \"y\", setting axis along rolling occur. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/stat_rollingkernel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rolling Kernel — stat_rollingkernel","text":"Layer ggproto object.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/stat_rollingkernel.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Rolling Kernel — stat_rollingkernel","text":"stat_rollingkernel() understands following aesthetics (required aesthetics bold) x y group","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/stat_rollingkernel.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Rolling Kernel — stat_rollingkernel","text":"x sequence ordered x positions. y weighted value rolling kernel. weight sum weight strengths position. scaled fraction weight strengths position. weight / sum(weight) group.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/stat_rollingkernel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rolling Kernel — stat_rollingkernel","text":"","code":"ggplot(mpg, aes(displ, hwy, colour = class)) +   geom_point() +   stat_rollingkernel()   # The (scaled) weights can be used to emphasise data-dense areas ggplot(mpg, aes(displ, hwy, colour = class)) +   geom_point() +   stat_rollingkernel(aes(alpha = after_stat(scaled)))"},{"path":"https://teunbrand.github.io/ggh4x/reference/stat_theodensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitted theoretical density — stat_theodensity","title":"Fitted theoretical density — stat_theodensity","text":"Estimates parameters given distribution evaluates probability density function parameters. can useful comparing histograms kernel density estimates theoretical distribution.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/stat_theodensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitted theoretical density — stat_theodensity","text":"","code":"stat_theodensity(   mapping = NULL,   data = NULL,   geom = \"line\",   position = \"identity\",   ...,   distri = \"norm\",   n = 512,   fix.arg = NULL,   start.arg = NULL,   na.rm = TRUE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://teunbrand.github.io/ggh4x/reference/stat_theodensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitted theoretical density — stat_theodensity","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). geom Use override default geom stat_theodensity. position Position adjustment, either string, result call position adjustment function. ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. distri character length 1 naming distribution without prefix. See details. n integer length 1 number equally spaced points density function evaluated. Ignored distribution discrete. fix.arg optional named list giving values fixed parameters named distribution. Parameters fixed value estimated maximum likelihood procedures. start.arg named list giving initial values parameters named distribution. argument may omitted (default) distributions reasonable starting values computed. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/stat_theodensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitted theoretical density — stat_theodensity","text":"Layer ggproto object.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/stat_theodensity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fitted theoretical density — stat_theodensity","text":"Valid distri arguments names distributions exists density function. names given without prefix (typically 'd', 'r', 'q' 'r'). example: \"norm\" normal distribution \"nbinom\" negative binomial distribution. Take look distributions() stats package overview. couple distribution exist reasonable starting values, Student t-distribution F-distribution. cases, probably wise provide reasonable starting values named list start.arg argument. estimating binomial distribution, best supply size fix.arg argument. default, y values integral distribution 1, scales well defaults kernel density estimates. comparing distributions absolute count histograms, sensible choice aesthetic mapping aes(y = stat(count) * binwidth), wherein binwidth matched bin width histogram. discrete distributions, input data expected integers, doubles can divided 1 without remainders. Parameters estimated using fitdistrplus::fitdist()() function fitdistrplus package using maximum likelihood estimation. Hypergeometric multinomial distributions stats package supported.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/stat_theodensity.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Fitted theoretical density — stat_theodensity","text":"density probability density count density * number observations - useful comparing histograms scaled density scaled maximum 1","code":""},{"path":[]},{"path":"https://teunbrand.github.io/ggh4x/reference/stat_theodensity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitted theoretical density — stat_theodensity","text":"","code":"# A mixture of normal distributions where the standard deviation is # inverse gamma distributed resembles a cauchy distribution. x <- rnorm(2000, 10, 1/rgamma(2000, 2, 0.5)) df <- data.frame(x = x)  ggplot(df, aes(x)) +   geom_histogram(binwidth = 0.1,                  alpha = 0.3, position = \"identity\") +   stat_theodensity(aes(y = stat(count) * 0.1, colour = \"Normal\"),                    distri = \"norm\", geom = \"line\") +   stat_theodensity(aes(y = stat(count) * 0.1, colour = \"Cauchy\"),                    distri = \"cauchy\", geom = \"line\") +   coord_cartesian(xlim = c(5, 15))   # A negative binomial can be understood as a Poisson-gamma mixture df <- data.frame(x = c(rpois(500, 25),                        rpois(500, rgamma(500, 5, 0.2))),                  cat = rep(c(\"Poisson\", \"Poisson-gamma\"), each = 500))  ggplot(df, aes(x)) +   geom_histogram(binwidth = 1, aes(fill = cat),                  alpha = 0.3, position = \"identity\") +   stat_theodensity(aes(y = stat(count), colour = cat), distri = \"nbinom\",                    geom = \"step\", position = position_nudge(x = -0.5)) +   stat_summary(aes(y = x, colour = cat, x = 1),                fun.data = function(x){data.frame(xintercept = mean(x))},                geom = \"vline\")"},{"path":"https://teunbrand.github.io/ggh4x/reference/strip_nested.html","id":null,"dir":"Reference","previous_headings":"","what":"Nested strips — strip_nested","title":"Nested strips — strip_nested","text":"strip style groups strips layer share label. default strip facet_nested() facet_nested_wrap().","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/strip_nested.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nested strips — strip_nested","text":"","code":"strip_nested(   clip = \"inherit\",   size = \"constant\",   bleed = FALSE,   text_x = NULL,   text_y = NULL,   background_x = NULL,   background_y = NULL,   by_layer_x = FALSE,   by_layer_y = FALSE )"},{"path":"https://teunbrand.github.io/ggh4x/reference/strip_nested.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nested strips — strip_nested","text":"clip character(1) controls whether text labels clipped background boxes. Can either \"inherit\" (default), \"\" \"\". size character(1) stating strip margins different layers remain \"constant\" \"variable\". bleed logical(1) indicating whether merging lower-layer variables allowed higher-layer variables separate. See details. text_x, text_y list() element_text() elements. See details section strip_themed(). background_x, background_y list() element_rect() elements. See details section strip_themed(). by_layer_x, by_layer_y logical(1) TRUE, maps different elements different layers strip. FALSE, maps different elements individual strips, possibly repeating elements match number strips rep_len().","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/strip_nested.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Nested strips — strip_nested","text":"StripNested ggproto object can given argument facets ggh4x.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/strip_nested.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Nested strips — strip_nested","text":"display order always outermost variable placed furthest away panels. Strips automatically grouped span nested variable. bleed argument controls whether lower-layer strips allowed merged higher-layer strips different, .e. can bleed hierarchies. Suppose strip_vanilla() behaviour following strips: [_1_][_2_][_2_] [_3_][_3_][_4_] case, default bleed = FALSE argument result following: [_1_][___2____] [_3_][_3_][_4_] Whereas bleed = TRUE allow following: [_1_][___2____] [___3____][_4_]","code":""},{"path":[]},{"path":"https://teunbrand.github.io/ggh4x/reference/strip_nested.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Nested strips — strip_nested","text":"","code":"# A standard plot p <- ggplot(mpg, aes(displ, hwy)) +   geom_point()  # Combine the strips p + facet_wrap2(vars(cyl, drv), strip = strip_nested())   # The facet_nested and facet_nested_wrap functions have nested strips # automatically p + facet_nested_wrap(vars(cyl, drv))   # Changing the bleed argument merges the \"f\" labels in the top-right p + facet_wrap2(vars(cyl, drv), strip = strip_nested(bleed = TRUE))"},{"path":"https://teunbrand.github.io/ggh4x/reference/strip_split.html","id":null,"dir":"Reference","previous_headings":"","what":"Split strips — strip_split","title":"Split strips — strip_split","text":"strip style allows greater control strip placed relative panel. Different facetting variables allowed placed different sides.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/strip_split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split strips — strip_split","text":"","code":"strip_split(   position = c(\"top\", \"left\"),   clip = \"inherit\",   size = \"constant\",   bleed = FALSE,   text_x = NULL,   text_y = NULL,   background_x = NULL,   background_y = NULL,   by_layer_x = FALSE,   by_layer_y = FALSE )"},{"path":"https://teunbrand.github.io/ggh4x/reference/strip_split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split strips — strip_split","text":"position character vector stating strips faceting variables placed. Can following: \"top\", \"bottom\", \"left\" \"right\". length position argument must match length variables provided facets argument wrap/manual layouts, provided rows cols arguments grid layout. clip character(1) controls whether text labels clipped background boxes. Can either \"inherit\" (default), \"\" \"\". size character(1) stating strip margins different layers remain \"constant\" \"variable\". bleed logical(1) indicating whether merging lower-layer variables allowed higher-layer variables separate. See details strip_nested info. Note currently, strip_split() recognise collisions strips, changing bleed = TRUE can unexpected results. text_x list() element_text() elements. See details section strip_themed(). text_y list() element_text() elements. See details section strip_themed(). background_x list() element_rect() elements. See details section strip_themed(). background_y list() element_rect() elements. See details section strip_themed(). by_layer_x logical(1) TRUE, maps different elements different layers strip. FALSE, maps different elements individual strips, possibly repeating elements match number strips rep_len(). by_layer_y logical(1) TRUE, maps different elements different layers strip. FALSE, maps different elements individual strips, possibly repeating elements match number strips rep_len().","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/strip_split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split strips — strip_split","text":"StripSplit ggproto object can given argument facets ggh4x.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/strip_split.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Split strips — strip_split","text":"Using style strip completely overrules strip.position switch arguments.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/ggh4x/reference/strip_split.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split strips — strip_split","text":"","code":"# A standard plot p <- ggplot(mpg, aes(displ, hwy)) +   geom_point()  # --- Wrap examples ------  # Defaults to 1st (cyl) at top, 2nd (drv) on left p + facet_wrap2(vars(cyl, drv), strip = strip_split())   # Change cyl to left, drv to bottom p + facet_wrap2(vars(cyl, drv), strip = strip_split(c(\"left\", \"bottom\")))   # --- Grid examples -----  # Display both strips levels on the left p + facet_grid2(vars(drv), vars(cyl),                 strip = strip_split(c(\"left\", \"left\")))   # Separate the strips again p + facet_grid2(vars(cyl, year),                 strip = strip_split(c(\"bottom\", \"left\")))   # Using a dummy variable as a title strip p + facet_grid2(vars(cyl, \"year\", year),                 strip = strip_split(c(\"bottom\", \"left\", \"left\")))"},{"path":"https://teunbrand.github.io/ggh4x/reference/strip_themed.html","id":null,"dir":"Reference","previous_headings":"","what":"Strip with themed boxes and texts — strip_themed","title":"Strip with themed boxes and texts — strip_themed","text":"style strips individually themed strips.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/strip_themed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Strip with themed boxes and texts — strip_themed","text":"","code":"strip_themed(   clip = \"inherit\",   size = \"constant\",   text_x = NULL,   text_y = NULL,   background_x = NULL,   background_y = NULL,   by_layer_x = FALSE,   by_layer_y = FALSE )"},{"path":"https://teunbrand.github.io/ggh4x/reference/strip_themed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Strip with themed boxes and texts — strip_themed","text":"clip character(1) controls whether text labels clipped background boxes. Can either \"inherit\" (default), \"\" \"\". size character(1) stating strip margins different layers remain \"constant\" \"variable\". text_x, text_y list() element_text() elements. See details. background_x, background_y list() element_rect() elements. See details. by_layer_x, by_layer_y logical(1) TRUE, maps different elements different layers strip. FALSE, maps different elements individual strips, possibly repeating elements match number strips rep_len().","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/strip_themed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Strip with themed boxes and texts — strip_themed","text":"StripThemed ggproto object can given argument facets ggh4x.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/strip_themed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Strip with themed boxes and texts — strip_themed","text":"respect text_* background_* arguments, can list (mix ) following objects: NULL indicates global plot theme applies. element_blank() omits drawing background text. element class object inheriting element_text element_rect classes. constructing homogeneous lists elements, elem_list_text() elem_list_rect() provided convenience.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/ggh4x/reference/strip_themed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Strip with themed boxes and texts — strip_themed","text":"","code":"# Some simple plot p <- ggplot(mpg, aes(displ, hwy)) +   geom_point()  # Set some theming options, we can use `element_blank()` backgrounds <- list(element_blank(), element_rect(fill = \"dodgerblue\")) # Or we could use `NULL` to use the global theme texts <- list(element_text(colour = \"red\"), NULL, element_text(face = \"bold\"))  # Elements are repeated until the fit the number of facets p + facet_wrap2(   vars(drv, year),   strip = strip_themed(     background_x = backgrounds,     text_x = texts   ) )   # Except when applied to each layer instead of every strip p + facet_wrap2(   vars(drv, year),   strip = strip_themed(     background_x = backgrounds,     text_x = texts,     by_layer_x = TRUE   ) )   # To conveniently distribute arguments over a list of the same elements, # you can use the following wrappers: p + facet_wrap2(   vars(drv, year),   strip = strip_themed(     text_x = elem_list_text(colour = c(\"blue\", \"red\")),     background_x = elem_list_rect(fill = c(\"white\", \"grey80\")),     by_layer_x = TRUE   ) )"},{"path":"https://teunbrand.github.io/ggh4x/reference/strip_vanilla.html","id":null,"dir":"Reference","previous_headings":"","what":"Default strips — strip_vanilla","title":"Default strips — strip_vanilla","text":"Strips style vanilla ggplot2.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/strip_vanilla.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default strips — strip_vanilla","text":"","code":"strip_vanilla(clip = \"inherit\", size = \"constant\")"},{"path":"https://teunbrand.github.io/ggh4x/reference/strip_vanilla.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default strips — strip_vanilla","text":"clip character(1) controls whether text labels clipped background boxes. Can either \"inherit\" (default), \"\" \"\". size character(1) stating strip margins different layers remain \"constant\" \"variable\".","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/strip_vanilla.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default strips — strip_vanilla","text":"Strip ggproto object can used ggh4x facets.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/ggh4x/reference/strip_vanilla.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default strips — strip_vanilla","text":"","code":"# Some dummy data with a long string df <- data.frame(   short = \"X\",   long  = \"A very long string that takes up a lot of space\",   value = 1 ) # Simple plot p <- ggplot(df, aes(value, value)) +   geom_point() +   theme(strip.text.y.right = element_text(angle = 0))  # Short titles take up as much space as long titles p + facet_grid2(   vars(short, long),   strip = strip_vanilla(size = \"constant\") )   # Short titles take up less space p + facet_grid2(   vars(short, long),   strip = strip_vanilla(size = \"variable\") )"},{"path":"https://teunbrand.github.io/ggh4x/reference/theme_extensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Theme extensions — theme_extensions","title":"Theme extensions — theme_extensions","text":"functions ggh4x using extensions theme system. extended theme argument listed , along elements expected , function(s) used.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/theme_extensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theme extensions — theme_extensions","text":"ggh4x.facet.nestline element_line() used parent nest_line argument facet_nested() facet_nested_wrap(). Inherits directly 'line' theme element. ggh4x.axis.nestline, ggh4x.axis.nestline.x, ggh4x.axis.nestline.y element_line() used line separate different layers labels guide_axis_nested(). Inherits 'axis.ticks' theme element. ggh4x.axis.nesttext.x, ggh4x.axis.nesttext.y element_text() used differentiate text higher hierarchy axis labels directly next axis line guide_axis_nested(). Inherits 'axis.text.x' 'axis.text.y' theme elements respectively. ggh4x.axis.ticks.length.minor rel() object used set size minor tick marks relative regular tick marks. used guide_axis_minor() guide_axis_logticks() functions. Defaults rel(2/3). ggh4x.axis.ticks.length.mini rel() object used set size smallest tick marks relative regular tick marks. used guide_axis_logticks() function. Defaults rel(1/3).","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/weave_factors.html","id":null,"dir":"Reference","previous_headings":"","what":"Bind together factors — weave_factors","title":"Bind together factors — weave_factors","text":"Computes new factor combinations input factors.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/weave_factors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bind together factors — weave_factors","text":"","code":"weave_factors(..., drop = TRUE, sep = \".\", replaceNA = TRUE)"},{"path":"https://teunbrand.github.io/ggh4x/reference/weave_factors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bind together factors — weave_factors","text":"... vectors drop logical length 1 TRUE remove combinations factors occurring input data. sep character length 1 string delimit new level labels. replaceNA logical length 1: replace NA values empty strings?","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/weave_factors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bind together factors — weave_factors","text":"factor representing combinations input factors.","code":""},{"path":"https://teunbrand.github.io/ggh4x/reference/weave_factors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bind together factors — weave_factors","text":"weave_factors() broadly resembles interaction(..., lex.order = TRUE), slightly altered approach non-factor inputs. words, function orders new levels levels first input variable ... given priority second input, second input priority third, etc. function treats non-factor inputs levels unique(.character(x)), wherein x represents input.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/ggh4x/reference/weave_factors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bind together factors — weave_factors","text":"","code":"f1 <- c(\"banana\", \"apple\", \"apple\", \"kiwi\") f2 <- factor(c(1, 1:3), labels = c(\"house\", \"cat\", \"dog\"))  # Notice the difference in level ordering between the following: interaction(f1, f2, drop = TRUE, lex.order = TRUE) #> [1] banana.house apple.house  apple.cat    kiwi.dog     #> Levels: apple.house apple.cat banana.house kiwi.dog interaction(f1, f2, drop = TRUE, lex.order = FALSE) #> [1] banana.house apple.house  apple.cat    kiwi.dog     #> Levels: apple.house banana.house apple.cat kiwi.dog weave_factors(f1, f2) #> [1] banana.house apple.house  apple.cat    kiwi.dog     #> Levels: banana.house apple.house apple.cat kiwi.dog  # The difference is in how characters are interpreted # The following are equivalent interaction(f1, f2, drop = TRUE, lex.order = TRUE) #> [1] banana.house apple.house  apple.cat    kiwi.dog     #> Levels: apple.house apple.cat banana.house kiwi.dog weave_factors(as.factor(f1), f2) #> [1] banana.house apple.house  apple.cat    kiwi.dog     #> Levels: apple.house apple.cat banana.house kiwi.dog"},{"path":"https://teunbrand.github.io/ggh4x/news/index.html","id":"ggh4x-development-version","dir":"Changelog","previous_headings":"","what":"ggh4x (development version)","title":"ggh4x (development version)","text":"New experimental strip_split() strip style facets. function might still give unexpected results. Feel free leave feedback! New coord_axes_inside() function moves axes outside panel inside panel. Documented ?theme_extensions collect information extra theme elements single place. Deprecated ggsubset(). Use data = ~ subset(.x, ...) instead. geom_*() stat_*() functions now allow dynamic dots. New geom_outline_points() draw overlapping points outlines. Fixed bug wherein facet label purging didn’t recognise rich text grobs axis text part axis. New guide_axis_scalebar() drawing scale bars (#63).","code":""},{"path":"https://teunbrand.github.io/ggh4x/news/index.html","id":"ggh4x-021","dir":"Changelog","previous_headings":"","what":"ggh4x 0.2.1","title":"ggh4x 0.2.1","text":"CRAN release: 2021-11-24 patch release fixing bugs broken unit test. Fixed misplacement nest lines vertical strips (#50). Fixed bug setting aspect ratio facet_grid2() family (#56).","code":""},{"path":"https://teunbrand.github.io/ggh4x/news/index.html","id":"ggh4x-020","dir":"Changelog","previous_headings":"","what":"ggh4x 0.2.0","title":"ggh4x 0.2.0","text":"CRAN release: 2021-08-21","code":""},{"path":"https://teunbrand.github.io/ggh4x/news/index.html","id":"facets-0-2-0","dir":"Changelog","previous_headings":"","what":"Facets","title":"ggh4x 0.2.0","text":"Facets largely refactored. Accordingly, vignette updated reflect latest changes.","code":""},{"path":"https://teunbrand.github.io/ggh4x/news/index.html","id":"wrap-0-2-0","dir":"Changelog","previous_headings":"Facets","what":"Wrap","title":"ggh4x 0.2.0","text":"previously existing facet_wrap2() now trim_blank option force nrow ncol argument exceed number rows columns needed place panels. Thanks @coolbutuseless letting steal idea {facetious} package. facet_wrap2() function already used offer options axis drawing.","code":""},{"path":"https://teunbrand.github.io/ggh4x/news/index.html","id":"grid-0-2-0","dir":"Changelog","previous_headings":"Facets","what":"Grid","title":"ggh4x 0.2.0","text":"addition, cousin facet_grid2() makes entrance. offers axis drawing extensions facet_wrap2(), grid layout. Moreover, allows independent scales across rows columns, constraint ggplot2::facet_grid().","code":""},{"path":"https://teunbrand.github.io/ggh4x/news/index.html","id":"nested-facets-0-2-0","dir":"Changelog","previous_headings":"Facets","what":"Nested facets","title":"ggh4x 0.2.0","text":"Besides facet_nested_wrap() inheriting facet_wrap2(), already case, now facet_nested() also inherits facet_grid2() make use extended axis drawing options. Also, nest_line argument now takes element_line() element_blank() draw indicator instead logical(1) argument took previously. bleed argument moved nested facet new strip_nested() function (see ).","code":""},{"path":"https://teunbrand.github.io/ggh4x/news/index.html","id":"manual-0-2-0","dir":"Changelog","previous_headings":"Facets","what":"Manual","title":"ggh4x 0.2.0","text":"New family facets now facet_manual(): facet can take user specified design layout populate panels accordingly.","code":""},{"path":"https://teunbrand.github.io/ggh4x/news/index.html","id":"strips-0-2-0","dir":"Changelog","previous_headings":"Facets","what":"Strips","title":"ggh4x 0.2.0","text":"facet functions ggh4x now strip arguments, can used new strip_*() functions control strips drawn. now, come following three variants: strip_vanilla() draws normal strips, allows control whether labels clipped size argument can let strips different layers different sizes. can convenient strip labels different sizes. strip_themed() , also let’s assign element_text() element_rect() different strips, allowing greater control styling. elements can assigned independently horizontal vertical strips can applied single strips layers strips. strip_nested() , also merges strips labels next one another. means core functionality facet_nested() facet_nested() wrap moved now powered strip argument. can still convenient draw nesting indicators.","code":""},{"path":"https://teunbrand.github.io/ggh4x/news/index.html","id":"other-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Other changes","title":"ggh4x 0.2.0","text":"Fixed spelling README (#32, thanks @vikatti!) Added helper secondary axes: help_secondary() Added stat_difference() shading ribbon based sign difference. Included ‘colour’/‘color’ arguments axis guides recolouring whole axis one go (instead editing 3-5 theme elements). Fix bug facetted_pos_scales() date scales (#37) Fix bug nested facets strip.text = element_blank. Requires ggplot2 >3.3.0, dev version time writing. (#35) Changed facet_wrap2()/facet_nested_wrap() ‘free’, ‘axes’ ‘remove_labels’ arguments less ambiguous. Fix bug truncated axes discrete scales (#39). Fix bug geom_pointpath() 1-member groups (#43). New axis function guide_axis_manual().","code":""},{"path":"https://teunbrand.github.io/ggh4x/news/index.html","id":"ggh4x-0121","dir":"Changelog","previous_headings":"","what":"ggh4x 0.1.2.1","title":"ggh4x 0.1.2.1","text":"CRAN release: 2021-02-11 Updated functions ggplot2 v3.3.0 (#1) Fixed compatibility issue facet_nested() patchwork (#4) Fixed bug facet_nested(bleed = FALSE) (#7) Added scale_(x/y)_dendrogram() associated guide guide_dendro() (#1) Added guide_axis_nested() convenience function weave_factors() (#3) Added guide_axis_minor() minor break tickmarks Added guide_axis_logticks logarithmic tickmarks Added element_part_rect() using rectangles subset edges theme element (#13). Added stat_rollingkernel() different smoothing lines. Added stat_rle() runlength calculation. Fixed bug geom_pointpath() (#15) Fixed scale_(x/y)_dendrogram labels passed scale (#17) geom_pointpath() now curves nonlinear coordinates (#15). Added stat_funxy(), stat_centroid() stat_midpoint() (#16). Added facet_wrap2() extensions. Added facet_nested_wrap() merging strips (#19) Alternative specification facet scales facetted_pos_scales formulas (#25). Added option discard dendrogram labels (#23). Added coloured text legend (stringlegend, #31). Added truncated axis guide. Supported axis truncation position guides .","code":""},{"path":"https://teunbrand.github.io/ggh4x/news/index.html","id":"ggh4x-011","dir":"Changelog","previous_headings":"","what":"ggh4x 0.1.1","title":"ggh4x 0.1.1","text":"Package usable state Added facet_nested() Added facetted_pos_scales() Added geom_pointpath() Added geom_rectrug() Added position_disjoint_ranges() Added position_lineartrans() Added scale_listed() Added scale_(fill/colour)_multi() Added stat_theodensity()","code":""},{"path":"https://teunbrand.github.io/ggh4x/news/index.html","id":"ggh4x-001","dir":"Changelog","previous_headings":"","what":"ggh4x 0.0.1","title":"ggh4x 0.0.1","text":"Added NEWS.md file track changes package. Initialised repository skeleton","code":""}]
